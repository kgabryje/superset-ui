(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{1858:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1840);\n\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var r = Math.sqrt(size / _math_js__WEBPACK_IMPORTED_MODULE_0__[/* pi */ "j"]);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, _math_js__WEBPACK_IMPORTED_MODULE_0__[/* tau */ "m"]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg1OC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jaXJjbGUuanM/NjYyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3BpLCB0YXV9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBwaSk7XG4gICAgY29udGV4dC5tb3ZlVG8ociwgMCk7XG4gICAgY29udGV4dC5hcmMoMCwgMCwgciwgMCwgdGF1KTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1858\n')},1859:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg1OS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jcm9zcy5qcz85NzkxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyA1KSAvIDI7XG4gICAgY29udGV4dC5tb3ZlVG8oLTMgKiByLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgLTMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAtMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygzICogciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKDMgKiByLCByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAzICogcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIDMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgcik7XG4gICAgY29udGV4dC5saW5lVG8oLTMgKiByLCByKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1859\n')},1860:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2MC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9kaWFtb25kLmpzPzJmM2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRhbjMwID0gTWF0aC5zcXJ0KDEgLyAzKSxcbiAgICB0YW4zMF8yID0gdGFuMzAgKiAyO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgeSA9IE1hdGguc3FydChzaXplIC8gdGFuMzBfMiksXG4gICAgICAgIHggPSB5ICogdGFuMzA7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgLXkpO1xuICAgIGNvbnRleHQubGluZVRvKHgsIDApO1xuICAgIGNvbnRleHQubGluZVRvKDAsIHkpO1xuICAgIGNvbnRleHQubGluZVRvKC14LCAwKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1860\n')},1861:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2MS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9zcXVhcmUuanM/YzRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgdyA9IE1hdGguc3FydChzaXplKSxcbiAgICAgICAgeCA9IC13IC8gMjtcbiAgICBjb250ZXh0LnJlY3QoeCwgeCwgdywgdyk7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1861\n')},1862:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1840);\n\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(_math_js__WEBPACK_IMPORTED_MODULE_0__[/* pi */ "j"] / 10) / Math.sin(7 * _math_js__WEBPACK_IMPORTED_MODULE_0__[/* pi */ "j"] / 10),\n    kx = Math.sin(_math_js__WEBPACK_IMPORTED_MODULE_0__[/* tau */ "m"] / 10) * kr,\n    ky = -Math.cos(_math_js__WEBPACK_IMPORTED_MODULE_0__[/* tau */ "m"] / 10) * kr;\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = _math_js__WEBPACK_IMPORTED_MODULE_0__[/* tau */ "m"] * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2Mi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9zdGFyLmpzPzkyZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtwaSwgdGF1fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG52YXIga2EgPSAwLjg5MDgxMzA5MTUyOTI4NTIyODEwLFxuICAgIGtyID0gTWF0aC5zaW4ocGkgLyAxMCkgLyBNYXRoLnNpbig3ICogcGkgLyAxMCksXG4gICAga3ggPSBNYXRoLnNpbih0YXUgLyAxMCkgKiBrcixcbiAgICBreSA9IC1NYXRoLmNvcyh0YXUgLyAxMCkgKiBrcjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAqIGthKSxcbiAgICAgICAgeCA9IGt4ICogcixcbiAgICAgICAgeSA9IGt5ICogcjtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCA1OyArK2kpIHtcbiAgICAgIHZhciBhID0gdGF1ICogaSAvIDUsXG4gICAgICAgICAgYyA9IE1hdGguY29zKGEpLFxuICAgICAgICAgIHMgPSBNYXRoLnNpbihhKTtcbiAgICAgIGNvbnRleHQubGluZVRvKHMgKiByLCAtYyAqIHIpO1xuICAgICAgY29udGV4dC5saW5lVG8oYyAqIHggLSBzICogeSwgcyAqIHggKyBjICogeSk7XG4gICAgfVxuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1862\n')},1863:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var sqrt3 = Math.sqrt(3);\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2My5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC90cmlhbmdsZS5qcz9jNmRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzcXJ0MyA9IE1hdGguc3FydCgzKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHkgPSAtTWF0aC5zcXJ0KHNpemUgLyAoc3FydDMgKiAzKSk7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgeSAqIDIpO1xuICAgIGNvbnRleHQubGluZVRvKC1zcXJ0MyAqIHksIC15KTtcbiAgICBjb250ZXh0LmxpbmVUbyhzcXJ0MyAqIHksIC15KTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1863\n')},1864:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2NC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC93eWUuanM/ZGRhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYyA9IC0wLjUsXG4gICAgcyA9IE1hdGguc3FydCgzKSAvIDIsXG4gICAgayA9IDEgLyBNYXRoLnNxcnQoMTIpLFxuICAgIGEgPSAoayAvIDIgKyAxKSAqIDM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBhKSxcbiAgICAgICAgeDAgPSByIC8gMixcbiAgICAgICAgeTAgPSByICogayxcbiAgICAgICAgeDEgPSB4MCxcbiAgICAgICAgeTEgPSByICogayArIHIsXG4gICAgICAgIHgyID0gLXgxLFxuICAgICAgICB5MiA9IHkxO1xuICAgIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gICAgY29udGV4dC5saW5lVG8oeDEsIHkxKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4MiwgeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCAtIHMgKiB5MCwgcyAqIHgwICsgYyAqIHkwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgLSBzICogeTEsIHMgKiB4MSArIGMgKiB5MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyIC0gcyAqIHkyLCBzICogeDIgKyBjICogeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCArIHMgKiB5MCwgYyAqIHkwIC0gcyAqIHgwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgKyBzICogeTEsIGMgKiB5MSAtIHMgKiB4MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyICsgcyAqIHkyLCBjICogeTIgLSBzICogeDIpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1864\n')},1898:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return symbols; });\n/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2459);\n/* harmony import */ var _symbol_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1858);\n/* harmony import */ var _symbol_cross_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1859);\n/* harmony import */ var _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1860);\n/* harmony import */ var _symbol_star_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1862);\n/* harmony import */ var _symbol_square_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1861);\n/* harmony import */ var _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1863);\n/* harmony import */ var _symbol_wye_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1864);\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1841);\n\n\n\n\n\n\n\n\n\n\nvar symbols = [\n  _symbol_circle_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"],\n  _symbol_cross_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"],\n  _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"],\n  _symbol_square_js__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"],\n  _symbol_star_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"],\n  _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"],\n  _symbol_wye_js__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"]\n];\n\n/* harmony default export */ __webpack_exports__["a"] = (function() {\n  var type = Object(_constant_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(_symbol_circle_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"]),\n      size = Object(_constant_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + "" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg5OC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC5qcz8zYjRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCBjaXJjbGUgZnJvbSBcIi4vc3ltYm9sL2NpcmNsZS5qc1wiO1xuaW1wb3J0IGNyb3NzIGZyb20gXCIuL3N5bWJvbC9jcm9zcy5qc1wiO1xuaW1wb3J0IGRpYW1vbmQgZnJvbSBcIi4vc3ltYm9sL2RpYW1vbmQuanNcIjtcbmltcG9ydCBzdGFyIGZyb20gXCIuL3N5bWJvbC9zdGFyLmpzXCI7XG5pbXBvcnQgc3F1YXJlIGZyb20gXCIuL3N5bWJvbC9zcXVhcmUuanNcIjtcbmltcG9ydCB0cmlhbmdsZSBmcm9tIFwiLi9zeW1ib2wvdHJpYW5nbGUuanNcIjtcbmltcG9ydCB3eWUgZnJvbSBcIi4vc3ltYm9sL3d5ZS5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5cbmV4cG9ydCB2YXIgc3ltYm9scyA9IFtcbiAgY2lyY2xlLFxuICBjcm9zcyxcbiAgZGlhbW9uZCxcbiAgc3F1YXJlLFxuICBzdGFyLFxuICB0cmlhbmdsZSxcbiAgd3llXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHR5cGUgPSBjb25zdGFudChjaXJjbGUpLFxuICAgICAgc2l6ZSA9IGNvbnN0YW50KDY0KSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHN5bWJvbCgpIHtcbiAgICB2YXIgYnVmZmVyO1xuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcbiAgICB0eXBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykuZHJhdyhjb250ZXh0LCArc2l6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIHN5bWJvbC50eXBlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHR5cGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCBzeW1ib2wpIDogdHlwZTtcbiAgfTtcblxuICBzeW1ib2wuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzaXplID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHN5bWJvbCkgOiBzaXplO1xuICB9O1xuXG4gIHN5bWJvbC5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXywgc3ltYm9sKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIHN5bWJvbDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1898\n')},1913:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DEFAULT_MARGIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createMarginSelector; });\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(157);\n\nconst DEFAULT_MARGIN = { bottom: 16, left: 16, right: 16, top: 16 };\nfunction createMarginSelector(defaultMargin = DEFAULT_MARGIN) {\n    return Object(reselect__WEBPACK_IMPORTED_MODULE_0__["createSelector"])((margin) => margin.bottom, margin => margin.left, margin => margin.right, margin => margin.top, (bottom = defaultMargin.bottom, left = defaultMargin.left, right = defaultMargin.right, top = defaultMargin.top) => ({\n        bottom,\n        left,\n        right,\n        top,\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkxMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9wbHVnaW5zL3ByZXNldC1jaGFydC14eS9zcmMvdXRpbHMvY3JlYXRlTWFyZ2luU2VsZWN0b3IudHN4Pzg4ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdyZXNlbGVjdCc7XG5pbXBvcnQgeyBNYXJnaW4gfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX01BUkdJTiA9IHsgYm90dG9tOiAxNiwgbGVmdDogMTYsIHJpZ2h0OiAxNiwgdG9wOiAxNiB9O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVNYXJnaW5TZWxlY3RvcihkZWZhdWx0TWFyZ2luOiBNYXJnaW4gPSBERUZBVUxUX01BUkdJTikge1xuICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoXG4gICAgKG1hcmdpbjogUGFydGlhbDxNYXJnaW4+KSA9PiBtYXJnaW4uYm90dG9tLFxuICAgIG1hcmdpbiA9PiBtYXJnaW4ubGVmdCxcbiAgICBtYXJnaW4gPT4gbWFyZ2luLnJpZ2h0LFxuICAgIG1hcmdpbiA9PiBtYXJnaW4udG9wLFxuICAgIChcbiAgICAgIGJvdHRvbSA9IGRlZmF1bHRNYXJnaW4uYm90dG9tLFxuICAgICAgbGVmdCA9IGRlZmF1bHRNYXJnaW4ubGVmdCxcbiAgICAgIHJpZ2h0ID0gZGVmYXVsdE1hcmdpbi5yaWdodCxcbiAgICAgIHRvcCA9IGRlZmF1bHRNYXJnaW4udG9wLFxuICAgICkgPT4gKHtcbiAgICAgIGJvdHRvbSxcbiAgICAgIGxlZnQsXG4gICAgICByaWdodCxcbiAgICAgIHRvcCxcbiAgICB9KSxcbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1913\n')},1914:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Text; });\n/* unused harmony export getStringWidth */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var reduce_css_calc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1895);\n/* harmony import */ var reduce_css_calc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(reduce_css_calc__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nvar emptyFunction_1 = emptyFunction;\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nvar invariant_1 = invariant;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction_1;\n\nif (false) { var printWarning; }\n\nvar warning_1 = warning;\n\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\nif (false) { var loggedTypeFailures, ReactPropTypesSecret$1, warning$1, invariant$1; }\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (false) { var stack, error, typeSpecName; }\n}\n\nvar checkPropTypes_1 = checkPropTypes;\n\nvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (false) { var manualPropTypeWarningCount, manualPropTypeCallCache; }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret_1) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant_1(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (false) { var cacheKey; }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n       false ? undefined : void 0;\n      return emptyFunction_1.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       false ? undefined : void 0;\n      return emptyFunction_1.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning_1(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction_1.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = objectAssign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\nvar factoryWithThrowingShims = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret_1) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant_1(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  }  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  }  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction_1;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\nvar propTypes = createCommonjsModule(function (module) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, isValidElement, REACT_ELEMENT_TYPE; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = factoryWithThrowingShims();\n}\n});\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root;\n\n/** Built-in value references. */\nvar Symbol$1 = _root.Symbol;\n\nvar _Symbol = Symbol$1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty$1.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar _objectToString = objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag$1 && symToStringTag$1 in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject;\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject_1(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nvar isFunction_1 = isFunction;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root['__core-js_shared__'];\n\nvar _coreJsData = coreJsData;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nvar _isMasked = isMasked;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nvar _toSource = toSource;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto$1 = Function.prototype,\n    objectProto$2 = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$1 = funcProto$1.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$2.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString$1.call(hasOwnProperty$2).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject_1(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\nvar _baseIsNative = baseIsNative;\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nvar _getValue = getValue;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\nvar _getNative = getNative;\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\nvar _nativeCreate = nativeCreate;\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\nvar _hashClear = hashClear;\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _hashDelete = hashDelete;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$3.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty$3.call(data, key) ? data[key] : undefined;\n}\n\nvar _hashGet = hashGet;\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$4 = objectProto$4.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$4.call(data, key);\n}\n\nvar _hashHas = hashHas;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\nvar _hashSet = hashSet;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\nvar _Hash = Hash;\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nvar _listCacheClear = listCacheClear;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nvar eq_1 = eq;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq_1(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nvar _assocIndexOf = assocIndexOf;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete;\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nvar _listCacheGet = listCacheGet;\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\nvar _listCacheHas = listCacheHas;\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nvar _listCacheSet = listCacheSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\nvar _ListCache = ListCache;\n\n/* Built-in method references that are verified to be native. */\nvar Map = _getNative(_root, 'Map');\n\nvar _Map = Map;\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\nvar _mapCacheClear = mapCacheClear;\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nvar _isKeyable = isKeyable;\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nvar _getMapData = getMapData;\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _mapCacheDelete = mapCacheDelete;\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\nvar _mapCacheGet = mapCacheGet;\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\nvar _mapCacheHas = mapCacheHas;\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nvar _mapCacheSet = mapCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\nvar _MapCache = MapCache;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || _MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = _MapCache;\n\nvar memoize_1 = memoize;\n\nvar MEASUREMENT_ELEMENT_ID = '__react_svg_text_measurement_id';\n\nfunction getStringWidth(str, style) {\n  try {\n    // Calculate length of each word to be used to determine number of words per line\n    var textEl = document.getElementById(MEASUREMENT_ELEMENT_ID);\n    if (!textEl) {\n      var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.style.width = 0;\n      svg.style.height = 0;\n      svg.style.position = 'absolute';\n      svg.style.top = '-100%';\n      svg.style.left = '-100%';\n      textEl = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      textEl.setAttribute('id', MEASUREMENT_ELEMENT_ID);\n      svg.appendChild(textEl);\n      document.body.appendChild(svg);\n    }\n\n    Object.assign(textEl.style, style);\n    textEl.textContent = str;\n    return textEl.getComputedTextLength();\n  } catch (e) {\n    return null;\n  }\n}\n\nvar getStringWidth$1 = memoize_1(getStringWidth, function (str, style) {\n  return str + '_' + JSON.stringify(style);\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Text = function (_Component) {\n  inherits(Text, _Component);\n\n  function Text(props) {\n    classCallCheck(this, Text);\n\n    var _this = possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props));\n\n    _this.state = {\n      wordsByLines: []\n    };\n    return _this;\n  }\n\n  createClass(Text, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.updateWordsByLines(this.props, true);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var needCalculate = this.props.children !== nextProps.children || this.props.style !== nextProps.style;\n      this.updateWordsByLines(nextProps, needCalculate);\n    }\n  }, {\n    key: 'updateWordsByLines',\n    value: function updateWordsByLines(props, needCalculate) {\n      // Only perform calculations if using features that require them (multiline, scaleToFit)\n      if (props.width || props.scaleToFit) {\n        if (needCalculate) {\n          var words = props.children ? props.children.toString().split(/\\s+/) : [];\n\n          this.wordsWithComputedWidth = words.map(function (word) {\n            return {\n              word: word,\n              width: getStringWidth$1(word, props.style)\n            };\n          });\n          this.spaceWidth = getStringWidth$1('\\xA0', props.style);\n        }\n\n        var wordsByLines = this.calculateWordsByLines(this.wordsWithComputedWidth, this.spaceWidth, props.width);\n        this.setState({ wordsByLines: wordsByLines });\n      } else {\n        this.updateWordsWithoutCalculate(props);\n      }\n    }\n  }, {\n    key: 'updateWordsWithoutCalculate',\n    value: function updateWordsWithoutCalculate(props) {\n      var words = props.children ? props.children.toString().split(/\\s+/) : [];\n      this.setState({ wordsByLines: [{ words: words }] });\n    }\n  }, {\n    key: 'calculateWordsByLines',\n    value: function calculateWordsByLines(wordsWithComputedWidth, spaceWidth, lineWidth) {\n      var scaleToFit = this.props.scaleToFit;\n\n      return wordsWithComputedWidth.reduce(function (result, _ref) {\n        var word = _ref.word,\n            width = _ref.width;\n\n        var currentLine = result[result.length - 1];\n\n        if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < lineWidth)) {\n          // Word can be added to an existing line\n          currentLine.words.push(word);\n          currentLine.width += width + spaceWidth;\n        } else {\n          // Add first word to line or word is too long to scaleToFit on existing line\n          var newLine = { words: [word], width: width };\n          result.push(newLine);\n        }\n\n        return result;\n      }, []);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          dx = _props.dx,\n          dy = _props.dy,\n          textAnchor = _props.textAnchor,\n          verticalAnchor = _props.verticalAnchor,\n          scaleToFit = _props.scaleToFit,\n          angle = _props.angle,\n          lineHeight = _props.lineHeight,\n          capHeight = _props.capHeight,\n          innerRef = _props.innerRef,\n          textProps = objectWithoutProperties(_props, ['dx', 'dy', 'textAnchor', 'verticalAnchor', 'scaleToFit', 'angle', 'lineHeight', 'capHeight', 'innerRef']);\n      var wordsByLines = this.state.wordsByLines;\n\n\n      var x = textProps.x;\n      var y = textProps.y;\n\n      var startDy = void 0;\n      switch (verticalAnchor) {\n        case 'start':\n          startDy = reduce_css_calc__WEBPACK_IMPORTED_MODULE_1___default()('calc(' + capHeight + ')');\n          break;\n        case 'middle':\n          startDy = reduce_css_calc__WEBPACK_IMPORTED_MODULE_1___default()('calc(' + (wordsByLines.length - 1) / 2 + ' * -' + lineHeight + ' + (' + capHeight + ' / 2))');\n          break;\n        default:\n          startDy = reduce_css_calc__WEBPACK_IMPORTED_MODULE_1___default()('calc(' + (wordsByLines.length - 1) + ' * -' + lineHeight + ')');\n          break;\n      }\n\n      var transforms = [];\n      if (scaleToFit && wordsByLines.length) {\n        var lineWidth = wordsByLines[0].width;\n        var sx = this.props.width / lineWidth;\n        var sy = sx;\n        var originX = x - sx * x;\n        var originY = y - sy * y;\n        transforms.push('matrix(' + sx + ', 0, 0, ' + sy + ', ' + originX + ', ' + originY + ')');\n      }\n      if (angle) {\n        transforms.push('rotate(' + angle + ', ' + x + ', ' + y + ')');\n      }\n      if (transforms.length) {\n        textProps.transform = transforms.join(' ');\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n        'svg',\n        {\n          ref: innerRef,\n          x: dx,\n          y: dy,\n          fontSize: textProps.fontSize,\n          style: { overflow: 'visible' }\n        },\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n          'text',\n          _extends({}, textProps, { textAnchor: textAnchor }),\n          wordsByLines.map(function (line, index) {\n            return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n              'tspan',\n              { x: x, dy: index === 0 ? startDy : lineHeight, key: index },\n              line.words.join(' ')\n            );\n          })\n        )\n      );\n    }\n  }]);\n  return Text;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nText.defaultProps = {\n  x: 0,\n  y: 0,\n  dx: 0,\n  dy: 0,\n  lineHeight: '1em',\n  capHeight: '0.71em', // Magic number from d3\n  scaleToFit: false,\n  textAnchor: 'start',\n  verticalAnchor: 'end' // default SVG behavior\n};\n\nText.propTypes = {\n  scaleToFit: propTypes.bool,\n  angle: propTypes.number,\n  textAnchor: propTypes.oneOf(['start', 'middle', 'end', 'inherit']),\n  verticalAnchor: propTypes.oneOf(['start', 'middle', 'end']),\n  style: propTypes.object,\n  innerRef: propTypes.func\n};\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(61)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1914\n")},1915:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return convertScaleToDataUIScale; });\nfunction isCompatibleDomainOrRange(array) {\n    return (typeof array !== 'undefined' &&\n        array.length > 0 &&\n        (typeof array[0] === 'string' || typeof array[0] === 'number'));\n}\n/**\n * Convert encodeable scale object into @data-ui's scale config\n * @param scale\n */\nfunction convertScaleToDataUIScale(scale) {\n    const { type, domain, range } = scale;\n    let outputType;\n    if (type === 'linear' || type === 'time' || type === 'band') {\n        outputType = type;\n    }\n    else if (type === 'utc') {\n        outputType = 'timeUtc';\n    }\n    else {\n        throw new Error(`Unsupported scale type: ${type}`);\n    }\n    const output = { type: outputType };\n    if (isCompatibleDomainOrRange(domain)) {\n        output.domain = domain;\n    }\n    if (isCompatibleDomainOrRange(range)) {\n        output.range = range;\n    }\n    if ('nice' in scale && typeof scale.nice === 'boolean') {\n        output.nice = scale.nice;\n    }\n    if ('paddingInner' in scale && typeof scale.paddingInner !== 'undefined') {\n        output.paddingInner = scale.paddingInner;\n    }\n    if ('paddingOuter' in scale && typeof scale.paddingOuter !== 'undefined') {\n        output.paddingOuter = scale.paddingOuter;\n    }\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkxNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9wbHVnaW5zL3ByZXNldC1jaGFydC14eS9zcmMvdXRpbHMvY29udmVydFNjYWxlVG9EYXRhVUlTY2FsZVNoYXBlLnRzPzdkYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmFsdWUsIFNjYWxlQ29uZmlnIH0gZnJvbSAnZW5jb2RhYmxlJztcblxudHlwZSBEYXRhVUlTY2FsZVR5cGUgPSAndGltZScgfCAndGltZVV0YycgfCAnbGluZWFyJyB8ICdiYW5kJztcblxuaW50ZXJmYWNlIERhdGFVSVNjYWxlIHtcbiAgdHlwZTogRGF0YVVJU2NhbGVUeXBlO1xuICBkb21haW4/OiBudW1iZXJbXSB8IHN0cmluZ1tdO1xuICBpbmNsdWRlWmVybz86IGJvb2xlYW47XG4gIG5pY2U/OiBib29sZWFuO1xuICBwYWRkaW5nSW5uZXI/OiBudW1iZXI7XG4gIHBhZGRpbmdPdXRlcj86IG51bWJlcjtcbiAgcmFuZ2U/OiBudW1iZXJbXSB8IHN0cmluZ1tdO1xuICByYW5nZVJvdW5kPzogbnVtYmVyW10gfCBzdHJpbmdbXTtcbn1cblxuZnVuY3Rpb24gaXNDb21wYXRpYmxlRG9tYWluT3JSYW5nZShcbiAgYXJyYXk6IFNjYWxlQ29uZmlnWydkb21haW4nXSB8IFNjYWxlQ29uZmlnWydyYW5nZSddLFxuKTogYXJyYXkgaXMgbnVtYmVyW10gfCBzdHJpbmdbXSB7XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIGFycmF5ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIGFycmF5Lmxlbmd0aCA+IDAgJiZcbiAgICAodHlwZW9mIGFycmF5WzBdID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgYXJyYXlbMF0gPT09ICdudW1iZXInKVxuICApO1xufVxuXG4vKipcbiAqIENvbnZlcnQgZW5jb2RlYWJsZSBzY2FsZSBvYmplY3QgaW50byBAZGF0YS11aSdzIHNjYWxlIGNvbmZpZ1xuICogQHBhcmFtIHNjYWxlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnZlcnRTY2FsZVRvRGF0YVVJU2NhbGU8T3V0cHV0IGV4dGVuZHMgVmFsdWU+KFxuICBzY2FsZTogU2NhbGVDb25maWc8T3V0cHV0Pixcbikge1xuICBjb25zdCB7IHR5cGUsIGRvbWFpbiwgcmFuZ2UgfSA9IHNjYWxlO1xuXG4gIGxldCBvdXRwdXRUeXBlOiBEYXRhVUlTY2FsZVR5cGU7XG5cbiAgaWYgKHR5cGUgPT09ICdsaW5lYXInIHx8IHR5cGUgPT09ICd0aW1lJyB8fCB0eXBlID09PSAnYmFuZCcpIHtcbiAgICBvdXRwdXRUeXBlID0gdHlwZTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAndXRjJykge1xuICAgIG91dHB1dFR5cGUgPSAndGltZVV0Yyc7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBzY2FsZSB0eXBlOiAke3R5cGV9YCk7XG4gIH1cblxuICBjb25zdCBvdXRwdXQ6IERhdGFVSVNjYWxlID0geyB0eXBlOiBvdXRwdXRUeXBlIH07XG4gIGlmIChpc0NvbXBhdGlibGVEb21haW5PclJhbmdlKGRvbWFpbikpIHtcbiAgICBvdXRwdXQuZG9tYWluID0gZG9tYWluO1xuICB9XG4gIGlmIChpc0NvbXBhdGlibGVEb21haW5PclJhbmdlKHJhbmdlKSkge1xuICAgIG91dHB1dC5yYW5nZSA9IHJhbmdlO1xuICB9XG4gIGlmICgnbmljZScgaW4gc2NhbGUgJiYgdHlwZW9mIHNjYWxlLm5pY2UgPT09ICdib29sZWFuJykge1xuICAgIG91dHB1dC5uaWNlID0gc2NhbGUubmljZTtcbiAgfVxuICBpZiAoJ3BhZGRpbmdJbm5lcicgaW4gc2NhbGUgJiYgdHlwZW9mIHNjYWxlLnBhZGRpbmdJbm5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBvdXRwdXQucGFkZGluZ0lubmVyID0gc2NhbGUucGFkZGluZ0lubmVyO1xuICB9XG4gIGlmICgncGFkZGluZ091dGVyJyBpbiBzY2FsZSAmJiB0eXBlb2Ygc2NhbGUucGFkZGluZ091dGVyICE9PSAndW5kZWZpbmVkJykge1xuICAgIG91dHB1dC5wYWRkaW5nT3V0ZXIgPSBzY2FsZS5wYWRkaW5nT3V0ZXI7XG4gIH1cblxuICByZXR1cm4gb3V0cHV0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFlQTtBQUFBO0FBR0E7QUFFQTtBQUNBO0FBRUE7QUFFQTs7O0FBR0E7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1915\n")},1916:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ createXYChartLayoutWithTheme; });\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/react/index.js\nvar react = __webpack_require__(2);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(17);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/classnames/index.js\nvar classnames = __webpack_require__(183);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/arc.js\nvar arc = __webpack_require__(2149);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/pie.js + 2 modules\nvar pie = __webpack_require__(2228);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/line.js\nvar line = __webpack_require__(1924);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/lineRadial.js\nvar lineRadial = __webpack_require__(1925);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/area.js\nvar src_area = __webpack_require__(2102);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/stack.js\nvar stack = __webpack_require__(2151);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/order/ascending.js\nvar ascending = __webpack_require__(1926);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/order/descending.js\nvar descending = __webpack_require__(2153);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/order/insideOut.js\nvar insideOut = __webpack_require__(2154);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/order/none.js\nvar none = __webpack_require__(1872);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/order/reverse.js\nvar order_reverse = __webpack_require__(2155);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/offset/expand.js\nvar expand = __webpack_require__(2156);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/offset/diverging.js\nvar diverging = __webpack_require__(2157);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/offset/none.js\nvar offset_none = __webpack_require__(1873);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/offset/silhouette.js\nvar silhouette = __webpack_require__(2158);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/offset/wiggle.js\nvar wiggle = __webpack_require__(2159);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/link/index.js\nvar src_link = __webpack_require__(1927);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/axis/node_modules/@vx/group/dist/vx-group.es.js\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nfunction Group(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      transform = _ref.transform,\n      className = _ref.className,\n      children = _ref.children,\n      restProps = objectWithoutProperties(_ref, ['top', 'left', 'transform', 'className', 'children']);\n\n  return react_default.a.createElement(\n    'g',\n    _extends({\n      className: classnames_default()('vx-group', className),\n      transform: transform || 'translate(' + left + ', ' + top + ')'\n    }, restProps),\n    children\n  );\n}\n\n\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@vx/point/dist/vx-point.es.js\nvar vx_point_es = __webpack_require__(1820);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-shape/src/curve/linear.js\nvar linear = __webpack_require__(1871);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3-path/src/path.js\nvar path = __webpack_require__(2459);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/axis/node_modules/@vx/shape/dist/vx-shape.es.js\n\n\n\n\n\n\n\n\n\nfunction callOrValue(maybeFn, data) {\n  if (typeof maybeFn === 'function') {\n    return maybeFn(data);\n  }\n  return maybeFn;\n}\n\nfunction additionalProps(restProps, data) {\n  return Object.keys(restProps).reduce(function (ret, cur) {\n    ret[cur] = callOrValue(restProps[cur], data);\n    return ret;\n  }, {});\n}\n\nvar vx_shape_es_extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar vx_shape_es_objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nfunction Arc(_ref) {\n  var className = _ref.className,\n      data = _ref.data,\n      centroid = _ref.centroid,\n      innerRadius = _ref.innerRadius,\n      outerRadius = _ref.outerRadius,\n      cornerRadius = _ref.cornerRadius,\n      startAngle = _ref.startAngle,\n      endAngle = _ref.endAngle,\n      padAngle = _ref.padAngle,\n      padRadius = _ref.padRadius,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'data', 'centroid', 'innerRadius', 'outerRadius', 'cornerRadius', 'startAngle', 'endAngle', 'padAngle', 'padRadius']);\n\n  var arc$$1 = Object(arc[\"a\" /* default */])();\n  if (centroid) arc$$1.centroid(centroid);\n  if (innerRadius) arc$$1.innerRadius(innerRadius);\n  if (outerRadius) arc$$1.outerRadius(outerRadius);\n  if (cornerRadius) arc$$1.cornerRadius(cornerRadius);\n  if (startAngle) arc$$1.startAngle(startAngle);\n  if (endAngle) arc$$1.endAngle(endAngle);\n  if (padAngle) arc$$1.padAngle(padAngle);\n  if (padRadius) arc$$1.padRadius(padRadius);\n  return react_default.a.createElement('path', vx_shape_es_extends({ className: classnames_default()('vx-arc', className), d: arc$$1(data) }, additionalProps(restProps, data)));\n}\n\nfunction Pie(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className,\n      _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      data = _ref.data,\n      centroid = _ref.centroid,\n      _ref$innerRadius = _ref.innerRadius,\n      innerRadius = _ref$innerRadius === undefined ? 0 : _ref$innerRadius,\n      outerRadius = _ref.outerRadius,\n      cornerRadius = _ref.cornerRadius,\n      _ref$startAngle = _ref.startAngle,\n      startAngle = _ref$startAngle === undefined ? 0 : _ref$startAngle,\n      endAngle = _ref.endAngle,\n      padAngle = _ref.padAngle,\n      padRadius = _ref.padRadius,\n      pieSort = _ref.pieSort,\n      pieSortValues = _ref.pieSortValues,\n      pieValue = _ref.pieValue,\n      children = _ref.children,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'top', 'left', 'data', 'centroid', 'innerRadius', 'outerRadius', 'cornerRadius', 'startAngle', 'endAngle', 'padAngle', 'padRadius', 'pieSort', 'pieSortValues', 'pieValue', 'children']);\n\n  var path$$1 = Object(arc[\"a\" /* default */])();\n  path$$1.innerRadius(innerRadius);\n  if (outerRadius) path$$1.outerRadius(outerRadius);\n  if (cornerRadius) path$$1.cornerRadius(cornerRadius);\n  if (padRadius) path$$1.padRadius(padRadius);\n  var pie$$1 = Object(pie[\"a\" /* default */])();\n  if (pieSort !== undefined) pie$$1.sort(pieSort);\n  if (pieSortValues !== undefined) pie$$1.sortValues(pieSortValues);\n  if (pieValue) pie$$1.value(pieValue);\n  if (padAngle != null) pie$$1.padAngle(padAngle);\n  if (startAngle != null) pie$$1.startAngle(startAngle);\n  if (endAngle != null) pie$$1.endAngle(endAngle);\n  var arcs = pie$$1(data);\n  var renderFunctionArg = {\n    arcs: arcs,\n    generatePathProps: function generatePathProps(arc$$1, index) {\n      return vx_shape_es_extends({\n        className: classnames_default()('vx-pie-arc', className),\n        d: path$$1(arc$$1)\n      }, additionalProps(restProps, vx_shape_es_extends({}, arc$$1, {\n        index: index,\n        centroid: centroid ? path$$1.centroid(arc$$1) : undefined\n      })));\n    },\n    generateCentroid: function generateCentroid(arc$$1) {\n      return centroid && centroid(path$$1.centroid(arc$$1), arc$$1);\n    }\n  };\n  return react_default.a.createElement(\n    Group,\n    { className: 'vx-pie-arcs-group', top: top, left: left },\n    children ? children(renderFunctionArg) : arcs.map(function (arc$$1, i) {\n      var pathProps = renderFunctionArg.generatePathProps(arc$$1, i);\n      return react_default.a.createElement(\n        'g',\n        { key: 'pie-arc-' + i },\n        react_default.a.createElement('path', pathProps),\n        renderFunctionArg.generateCentroid(arc$$1)\n      );\n    })\n  );\n}\n\nLine.propTypes = {\n  innerRef: prop_types_default.a.func\n};\n\nfunction Line(_ref) {\n  var _ref$from = _ref.from,\n      from = _ref$from === undefined ? new vx_point_es[\"Point\"]({ x: 0, y: 0 }) : _ref$from,\n      _ref$to = _ref.to,\n      to = _ref$to === undefined ? new vx_point_es[\"Point\"]({ x: 1, y: 1 }) : _ref$to,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? 'black' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,\n      _ref$strokeDasharray = _ref.strokeDasharray,\n      strokeDasharray = _ref$strokeDasharray === undefined ? '' : _ref$strokeDasharray,\n      _ref$transform = _ref.transform,\n      transform = _ref$transform === undefined ? '' : _ref$transform,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className,\n      data = _ref.data,\n      innerRef = _ref.innerRef,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['from', 'to', 'stroke', 'strokeWidth', 'strokeDasharray', 'transform', 'className', 'data', 'innerRef']);\n\n  return react_default.a.createElement('line', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-line', className),\n    x1: from.x,\n    y1: from.y,\n    x2: to.x,\n    y2: to.y,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    transform: transform\n  }, additionalProps(restProps, data)));\n}\n\nLinePath.propTypes = {\n  innerRef: prop_types_default.a.func,\n  xScale: prop_types_default.a.func,\n  yScale: prop_types_default.a.func,\n  data: prop_types_default.a.array,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  defined: prop_types_default.a.func,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  glyph: prop_types_default.a.func,\n  curve: prop_types_default.a.func\n};\n\nfunction LinePath(_ref) {\n  var children = _ref.children,\n      data = _ref.data,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      x = _ref.x,\n      y = _ref.y,\n      _ref$defined = _ref.defined,\n      defined = _ref$defined === undefined ? function () {\n    return true;\n  } : _ref$defined,\n      className = _ref.className,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? 'steelblue' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 2 : _ref$strokeWidth,\n      _ref$strokeDasharray = _ref.strokeDasharray,\n      strokeDasharray = _ref$strokeDasharray === undefined ? '' : _ref$strokeDasharray,\n      _ref$strokeDashoffset = _ref.strokeDashoffset,\n      strokeDashoffset = _ref$strokeDashoffset === undefined ? 0 : _ref$strokeDashoffset,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'none' : _ref$fill,\n      _ref$curve = _ref.curve,\n      curve = _ref$curve === undefined ? linear[\"a\" /* default */] : _ref$curve,\n      glyph = _ref.glyph,\n      innerRef = _ref.innerRef,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['children', 'data', 'xScale', 'yScale', 'x', 'y', 'defined', 'className', 'stroke', 'strokeWidth', 'strokeDasharray', 'strokeDashoffset', 'fill', 'curve', 'glyph', 'innerRef']);\n\n  var path$$1 = Object(line[\"a\" /* default */])().x(function () {\n    return xScale(x.apply(undefined, arguments));\n  }).y(function () {\n    return yScale(y.apply(undefined, arguments));\n  }).defined(defined).curve(curve);\n  if (children) return children({ path: path$$1 });\n  return react_default.a.createElement(\n    'g',\n    null,\n    react_default.a.createElement('path', vx_shape_es_extends({\n      ref: innerRef,\n      className: classnames_default()('vx-linepath', className),\n      d: path$$1(data),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeDashoffset: strokeDashoffset,\n      fill: fill\n    }, additionalProps(restProps, data))),\n    glyph && react_default.a.createElement(\n      'g',\n      { className: 'vx-linepath-glyphs' },\n      data.map(glyph)\n    )\n  );\n}\n\nLineRadial.propTypes = {\n  innerRef: prop_types_default.a.func\n};\n\nfunction LineRadial(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className,\n      angle = _ref.angle,\n      radius = _ref.radius,\n      defined = _ref.defined,\n      curve = _ref.curve,\n      data = _ref.data,\n      innerRef = _ref.innerRef,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'angle', 'radius', 'defined', 'curve', 'data', 'innerRef']);\n\n  var path$$1 = Object(lineRadial[\"a\" /* default */])();\n  if (angle) path$$1.angle(angle);\n  if (radius) path$$1.radius(radius);\n  if (defined) path$$1.defined(defined);\n  if (curve) path$$1.curve(curve);\n  return react_default.a.createElement(\n    'g',\n    null,\n    react_default.a.createElement('path', vx_shape_es_extends({\n      ref: innerRef,\n      className: classnames_default()('vx-line-radial', className),\n      d: path$$1(data)\n    }, additionalProps(restProps, data)))\n  );\n}\n\nArea.propTypes = {\n  x: prop_types_default.a.func,\n  x0: prop_types_default.a.func,\n  x1: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  y0: prop_types_default.a.func,\n  y1: prop_types_default.a.func,\n  xScale: prop_types_default.a.func,\n  yScale: prop_types_default.a.func,\n  data: prop_types_default.a.array,\n  defined: prop_types_default.a.func,\n  className: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool, prop_types_default.a.object, prop_types_default.a.array]),\n  innerRef: prop_types_default.a.func,\n  strokeDasharray: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  stroke: prop_types_default.a.string,\n  fill: prop_types_default.a.string,\n  curve: prop_types_default.a.func\n};\n\nfunction Area(_ref) {\n  var children = _ref.children,\n      x = _ref.x,\n      x0 = _ref.x0,\n      x1 = _ref.x1,\n      y = _ref.y,\n      y0 = _ref.y0,\n      y1 = _ref.y1,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      _ref$data = _ref.data,\n      data = _ref$data === undefined ? [] : _ref$data,\n      _ref$defined = _ref.defined,\n      defined = _ref$defined === undefined ? function () {\n    return true;\n  } : _ref$defined,\n      className = _ref.className,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 2 : _ref$strokeWidth,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? 'black' : _ref$stroke,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'rgba(0,0,0,0.3)' : _ref$fill,\n      curve = _ref.curve,\n      innerRef = _ref.innerRef,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['children', 'x', 'x0', 'x1', 'y', 'y0', 'y1', 'xScale', 'yScale', 'data', 'defined', 'className', 'strokeDasharray', 'strokeWidth', 'stroke', 'fill', 'curve', 'innerRef']);\n\n  var path$$1 = Object(src_area[\"a\" /* default */])();\n  if (x) path$$1.x(function () {\n    return xScale(x.apply(undefined, arguments));\n  });\n  if (x0) path$$1.x0(function () {\n    return xScale(x0.apply(undefined, arguments));\n  });\n  if (x1) path$$1.x1(function () {\n    return xScale(x1.apply(undefined, arguments));\n  });\n  if (y) path$$1.y(function () {\n    return yScale(y.apply(undefined, arguments));\n  });\n  if (y0) path$$1.y0(function () {\n    return yScale(y0.apply(undefined, arguments));\n  });\n  if (y1) path$$1.y1(function () {\n    return yScale(y1.apply(undefined, arguments));\n  });\n  if (defined) path$$1.defined(defined);\n  if (curve) path$$1.curve(curve);\n  if (children) return children({ path: path$$1 });\n  return react_default.a.createElement(\n    'g',\n    null,\n    react_default.a.createElement('path', vx_shape_es_extends({\n      ref: innerRef,\n      className: classnames_default()('vx-area', className),\n      d: path$$1(data),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      fill: fill\n    }, additionalProps(restProps, data)))\n  );\n}\n\nAreaClosed.propTypes = {\n  innerRef: prop_types_default.a.func\n};\n\nfunction AreaClosed(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      y0 = _ref.y0,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      data = _ref.data,\n      _ref$defined = _ref.defined,\n      defined = _ref$defined === undefined ? function () {\n    return true;\n  } : _ref$defined,\n      className = _ref.className,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 2 : _ref$strokeWidth,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? 'black' : _ref$stroke,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'rgba(0,0,0,0.3)' : _ref$fill,\n      curve = _ref.curve,\n      innerRef = _ref.innerRef,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['x', 'y', 'y0', 'xScale', 'yScale', 'data', 'defined', 'className', 'strokeDasharray', 'strokeWidth', 'stroke', 'fill', 'curve', 'innerRef']);\n\n  var path$$1 = Object(src_area[\"a\" /* default */])().x(function () {\n    return xScale(x.apply(undefined, arguments));\n  }).y0(y0 || yScale.range()[0]).y1(function () {\n    return yScale(y.apply(undefined, arguments));\n  }).defined(defined);\n  if (curve) path$$1.curve(curve);\n  return react_default.a.createElement(\n    'g',\n    null,\n    react_default.a.createElement('path', vx_shape_es_extends({\n      ref: innerRef,\n      className: classnames_default()('vx-area-closed', className),\n      d: path$$1(data),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      fill: fill\n    }, additionalProps(restProps, data)))\n  );\n}\n\nfunction AreaStack(_ref) {\n  var className = _ref.className,\n      _ref$top = _ref.top,\n      _ref$left = _ref.left,\n      keys = _ref.keys,\n      data = _ref.data,\n      curve = _ref.curve,\n      defined = _ref.defined,\n      x = _ref.x,\n      x0 = _ref.x0,\n      x1 = _ref.x1,\n      y0 = _ref.y0,\n      y1 = _ref.y1,\n      glyph = _ref.glyph,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === undefined ? false : _ref$reverse,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'top', 'left', 'keys', 'data', 'curve', 'defined', 'x', 'x0', 'x1', 'y0', 'y1', 'glyph', 'reverse']);\n\n  var stack$$1 = Object(stack[\"a\" /* default */])();\n  if (keys) stack$$1.keys(keys);\n\n  var path$$1 = Object(src_area[\"a\" /* default */])();\n  if (x) path$$1.x(x);\n  if (x0) path$$1.x0(x0);\n  if (x1) path$$1.x1(x1);\n  if (y0) path$$1.y0(y0);\n  if (y1) path$$1.y1(y1);\n  if (curve) path$$1.curve(curve);\n  if (defined) path$$1.defined(defined);\n\n  var seriesData = stack$$1(data);\n  if (reverse) seriesData.reverse();\n\n  return react_default.a.createElement(\n    'g',\n    null,\n    seriesData.map(function (series, i) {\n      return react_default.a.createElement('path', vx_shape_es_extends({\n        className: classnames_default()('vx-area-stack', className),\n        key: 'area-stack-' + i + '-' + (series.key || ''),\n        d: path$$1(series)\n      }, additionalProps(restProps, {\n        datum: series[i],\n        index: i,\n        series: series\n      })));\n    }),\n    !!glyph && react_default.a.createElement(\n      'g',\n      { className: 'vx-area-stack-glyphs' },\n      data.map(glyph)\n    )\n  );\n}\n\nBar.propTypes = {\n  innerRef: prop_types_default.a.func\n};\n\nfunction Bar(_ref) {\n  var className = _ref.className,\n      innerRef = _ref.innerRef,\n      data = _ref.data,\n      _ref$x = _ref.x,\n      x = _ref$x === undefined ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === undefined ? 0 : _ref$y,\n      width = _ref.width,\n      height = _ref.height,\n      rx = _ref.rx,\n      ry = _ref.ry,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'steelblue' : _ref$fill,\n      fillOpacity = _ref.fillOpacity,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      strokeLinecap = _ref.strokeLinecap,\n      strokeLinejoin = _ref.strokeLinejoin,\n      strokeMiterlimit = _ref.strokeMiterlimit,\n      strokeOpacity = _ref.strokeOpacity,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'innerRef', 'data', 'x', 'y', 'width', 'height', 'rx', 'ry', 'fill', 'fillOpacity', 'stroke', 'strokeWidth', 'strokeDasharray', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity']);\n\n  return react_default.a.createElement('rect', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-bar', className),\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    rx: rx,\n    ry: ry,\n    fill: fill,\n    fillOpacity: fillOpacity,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    strokeLinecap: strokeLinecap,\n    strokeLinejoin: strokeLinejoin,\n    strokeMiterlimit: strokeMiterlimit,\n    strokeOpacity: strokeOpacity\n  }, additionalProps(restProps, data)));\n}\n\nfunction BarGroup(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      x0 = _ref.x0,\n      x0Scale = _ref.x0Scale,\n      x1Scale = _ref.x1Scale,\n      yScale = _ref.yScale,\n      zScale = _ref.zScale,\n      keys = _ref.keys,\n      height = _ref.height,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['data', 'className', 'top', 'left', 'x0', 'x0Scale', 'x1Scale', 'yScale', 'zScale', 'keys', 'height']);\n\n  var format = x0Scale.tickFormat ? x0Scale.tickFormat() : function (d) {\n    return d;\n  };\n  return react_default.a.createElement(\n    Group,\n    { className: classnames_default()('vx-bar-group', className), top: top, left: left },\n    data && data.map(function (d, i) {\n      return react_default.a.createElement(\n        Group,\n        { key: 'bar-group-' + i + '-' + x0(d), left: x0Scale(x0(d)) },\n        keys && keys.map(function (key, i) {\n          var value = d[key];\n          return react_default.a.createElement(Bar, vx_shape_es_extends({\n            key: 'bar-group-bar-' + i + '-' + value + '-' + key,\n            x: x1Scale(key),\n            y: yScale(value),\n            width: x1Scale.bandwidth(),\n            height: height - yScale(value),\n            fill: zScale(key),\n            data: {\n              key: key,\n              value: value,\n              x: format(x0(d)),\n              data: d\n            }\n          }, restProps));\n        })\n      );\n    })\n  );\n}\n\nBarGroup.propTypes = {\n  data: prop_types_default.a.array.isRequired,\n  x0: prop_types_default.a.func.isRequired,\n  x0Scale: prop_types_default.a.func.isRequired,\n  x1Scale: prop_types_default.a.func.isRequired,\n  yScale: prop_types_default.a.func.isRequired,\n  zScale: prop_types_default.a.func.isRequired,\n  keys: prop_types_default.a.array.isRequired,\n  height: prop_types_default.a.number.isRequired,\n  className: prop_types_default.a.string,\n  top: prop_types_default.a.number,\n  left: prop_types_default.a.number\n};\n\nfunction BarGroupHorizontal(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      y0 = _ref.y0,\n      y0Scale = _ref.y0Scale,\n      y1Scale = _ref.y1Scale,\n      xScale = _ref.xScale,\n      zScale = _ref.zScale,\n      keys = _ref.keys,\n      width = _ref.width,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['data', 'className', 'top', 'left', 'y0', 'y0Scale', 'y1Scale', 'xScale', 'zScale', 'keys', 'width']);\n\n  var format = y0Scale.tickFormat ? y0Scale.tickFormat() : function (d) {\n    return d;\n  };\n  return react_default.a.createElement(\n    Group,\n    { className: classnames_default()('vx-bar-group-horizontal', className), top: top, left: left },\n    data && data.map(function (d, i) {\n      return react_default.a.createElement(\n        Group,\n        { key: 'bar-group-' + i + '-' + y0(d), top: y0Scale(y0(d)) },\n        keys && keys.map(function (key, i) {\n          var value = d[key];\n          return react_default.a.createElement(Bar, vx_shape_es_extends({\n            key: 'bar-group-bar-' + i + '-' + value + '-' + key,\n            x: 0,\n            y: y1Scale(key),\n            width: width - xScale(value),\n            height: y1Scale.bandwidth(),\n            fill: zScale(key),\n            data: {\n              key: key,\n              value: value,\n              y: format(y0(d)),\n              data: d\n            }\n          }, restProps));\n        })\n      );\n    })\n  );\n}\n\nBarGroupHorizontal.propTypes = {\n  data: prop_types_default.a.array.isRequired,\n  y0: prop_types_default.a.func.isRequired,\n  y0Scale: prop_types_default.a.func.isRequired,\n  y1Scale: prop_types_default.a.func.isRequired,\n  xScale: prop_types_default.a.func.isRequired,\n  zScale: prop_types_default.a.func.isRequired,\n  keys: prop_types_default.a.array.isRequired,\n  width: prop_types_default.a.number.isRequired,\n  className: prop_types_default.a.string,\n  top: prop_types_default.a.number,\n  left: prop_types_default.a.number\n};\n\nfunction BarStack(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      x = _ref.x,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      zScale = _ref.zScale,\n      keys = _ref.keys,\n      height = _ref.height,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['data', 'className', 'top', 'left', 'x', 'xScale', 'yScale', 'zScale', 'keys', 'height']);\n\n  var series = Object(stack[\"a\" /* default */])().keys(keys)(data);\n  var format = xScale.tickFormat ? xScale.tickFormat() : function (d) {\n    return d;\n  };\n  var bandwidth = xScale.bandwidth();\n  var step = xScale.step();\n  var paddingInner = xScale.paddingInner();\n  var paddingOuter = xScale.paddingOuter();\n  return react_default.a.createElement(\n    Group,\n    { className: classnames_default()('vx-bar-stack', className), top: top, left: left },\n    series && series.map(function (s, i) {\n      return react_default.a.createElement(\n        Group,\n        { key: 'vx-bar-stack-' + i },\n        s.map(function (d, ii) {\n          var barHeight = yScale(d[0]) - yScale(d[1]);\n          return react_default.a.createElement(Bar, vx_shape_es_extends({\n            key: 'bar-group-bar-' + i + '-' + ii + '-' + s.key,\n            x: xScale(x(d.data)),\n            y: yScale(d[1]),\n            width: bandwidth,\n            height: barHeight,\n            fill: zScale(s.key),\n            data: {\n              bandwidth: bandwidth,\n              paddingInner: paddingInner,\n              paddingOuter: paddingOuter,\n              step: step,\n              key: s.key,\n              value: d[1],\n              height: barHeight,\n              width: bandwidth,\n              x: x(d.data),\n              xFormatted: format(x(d.data)),\n              data: d.data\n            }\n          }, restProps));\n        })\n      );\n    })\n  );\n}\n\nBarStack.propTypes = {\n  data: prop_types_default.a.array.isRequired,\n  x: prop_types_default.a.func.isRequired,\n  xScale: prop_types_default.a.func.isRequired,\n  yScale: prop_types_default.a.func.isRequired,\n  zScale: prop_types_default.a.func.isRequired,\n  keys: prop_types_default.a.array.isRequired,\n  className: prop_types_default.a.string,\n  top: prop_types_default.a.number,\n  left: prop_types_default.a.number\n};\n\nfunction BarStackHorizontal(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      y = _ref.y,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      zScale = _ref.zScale,\n      keys = _ref.keys,\n      height = _ref.height,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['data', 'className', 'top', 'left', 'y', 'xScale', 'yScale', 'zScale', 'keys', 'height']);\n\n  var series = Object(stack[\"a\" /* default */])().keys(keys)(data);\n  var format = yScale.tickFormat ? yScale.tickFormat() : function (d) {\n    return d;\n  };\n  var bandwidth = yScale.bandwidth();\n  var step = yScale.step();\n  var paddingInner = yScale.paddingInner();\n  var paddingOuter = yScale.paddingOuter();\n  return react_default.a.createElement(\n    Group,\n    { className: classnames_default()('vx-bar-stack-horizontal', className), top: top, left: left },\n    series && series.map(function (s, i) {\n      return react_default.a.createElement(\n        Group,\n        { key: 'vx-bar-stack-horizontal-' + i },\n        s.map(function (d, ii) {\n          var barWidth = xScale(d[1]) - xScale(d[0]);\n          return react_default.a.createElement(Bar, vx_shape_es_extends({\n            key: 'bar-group-bar-' + i + '-' + ii + '-' + s.key,\n            x: xScale(d[0]),\n            y: yScale(y(d.data)),\n            width: barWidth,\n            height: bandwidth,\n            fill: zScale(s.key),\n            data: {\n              bandwidth: bandwidth,\n              paddingInner: paddingInner,\n              paddingOuter: paddingOuter,\n              step: step,\n              key: s.key,\n              value: d[0],\n              height: bandwidth,\n              width: barWidth,\n              y: y(d.data),\n              yFormatted: format(y(d.data)),\n              data: d.data\n            }\n          }, restProps));\n        })\n      );\n    })\n  );\n}\n\nBarStackHorizontal.propTypes = {\n  data: prop_types_default.a.array.isRequired,\n  y: prop_types_default.a.func.isRequired,\n  xScale: prop_types_default.a.func.isRequired,\n  yScale: prop_types_default.a.func.isRequired,\n  zScale: prop_types_default.a.func.isRequired,\n  keys: prop_types_default.a.array.isRequired,\n  className: prop_types_default.a.string,\n  top: prop_types_default.a.number,\n  left: prop_types_default.a.number\n};\n\nvar STACK_ORDERS = {\n  ascending: ascending[\"a\" /* default */],\n  descending: descending[\"a\" /* default */],\n  insideout: insideOut[\"a\" /* default */],\n  none: none[\"a\" /* default */],\n  reverse: order_reverse[\"a\" /* default */]\n};\n\nvar STACK_ORDER_NAMES = Object.keys(STACK_ORDERS);\n\nfunction stackOrder(order) {\n  return STACK_ORDERS[order] || STACK_ORDERS.none;\n}\n\nvar STACK_OFFSETS = {\n  expand: expand[\"a\" /* default */],\n  diverging: diverging[\"a\" /* default */],\n  none: offset_none[\"a\" /* default */],\n  silhouette: silhouette[\"a\" /* default */],\n  wiggle: wiggle[\"a\" /* default */]\n};\n\nvar STACK_OFFSET_NAMES = Object.keys(STACK_OFFSETS);\n\nfunction stackOffset(offset) {\n  return STACK_OFFSETS[offset] || STACK_OFFSETS.none;\n}\n\nfunction Stack(_ref) {\n  var className = _ref.className,\n      _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      keys = _ref.keys,\n      data = _ref.data,\n      curve = _ref.curve,\n      defined = _ref.defined,\n      x = _ref.x,\n      x0 = _ref.x0,\n      x1 = _ref.x1,\n      y0 = _ref.y0,\n      y1 = _ref.y1,\n      value = _ref.value,\n      order = _ref.order,\n      offset = _ref.offset,\n      render = _ref.render,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === undefined ? false : _ref$reverse,\n      restProps = vx_shape_es_objectWithoutProperties(_ref, ['className', 'top', 'left', 'keys', 'data', 'curve', 'defined', 'x', 'x0', 'x1', 'y0', 'y1', 'value', 'order', 'offset', 'render', 'reverse']);\n\n  var stack$$1 = Object(stack[\"a\" /* default */])();\n  if (keys) stack$$1.keys(keys);\n  if (value) stack$$1.value(value);\n  if (order) stack$$1.order(stackOrder(order));\n  if (offset) stack$$1.offset(stackOffset(offset));\n\n  var path$$1 = Object(src_area[\"a\" /* default */])();\n  if (x) path$$1.x(x);\n  if (x0) path$$1.x0(x0);\n  if (x1) path$$1.x1(x1);\n  if (y0) path$$1.y0(y0);\n  if (y1) path$$1.y1(y1);\n  if (curve) path$$1.curve(curve);\n  if (defined) path$$1.defined(defined);\n\n  var seriesData = stack$$1(data);\n  if (reverse) seriesData.reverse();\n\n  if (render) return react_default.a.createElement(\n    Group,\n    { top: top, left: left },\n    render({ seriesData: seriesData, path: path$$1 })\n  );\n\n  return react_default.a.createElement(\n    Group,\n    { top: top, left: left },\n    seriesData.map(function (series, i) {\n      return react_default.a.createElement('path', vx_shape_es_extends({\n        className: classnames_default()('vx-stack', className),\n        key: 'stack-' + i + '-' + (series.key || ''),\n        d: path$$1(series)\n      }, additionalProps(restProps, {\n        datum: series[i],\n        index: i,\n        series: series\n      })));\n    })\n  );\n}\n\nvar degreesToRadians = function degreesToRadians(degrees) {\n  return Math.PI / 180 * degrees;\n};\n\nfunction pathHorizontalDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var link = Object(src_link[\"a\" /* linkHorizontal */])();\n    link.x(x);\n    link.y(y);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\n\nLinkHorizontal.propTypes = {\n  innerRef: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkHorizontal(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.y;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.x;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathHorizontalDiagonal({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link-horizontal', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathVerticalDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var link = Object(src_link[\"c\" /* linkVertical */])();\n    link.x(x);\n    link.y(y);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\n\nLinkVertical.propTypes = {\n  innerRef: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkVertical(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathVerticalDiagonal({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link-vertical', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathRadialDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      angle = _ref.angle,\n      radius = _ref.radius;\n\n  return function (data) {\n    var link = Object(src_link[\"b\" /* linkRadial */])();\n    link.angle(angle);\n    link.radius(radius);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\n\nLinkRadial.propTypes = {\n  innerRef: prop_types_default.a.func,\n  angle: prop_types_default.a.func,\n  radius: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkRadial(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$angle = _ref2.angle,\n      angle = _ref2$angle === undefined ? function (d) {\n    return d.x;\n  } : _ref2$angle,\n      _ref2$radius = _ref2.radius,\n      radius = _ref2$radius === undefined ? function (d) {\n    return d.y;\n  } : _ref2$radius,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'angle', 'radius', 'source', 'target']);\n\n  path$$1 = path$$1 || pathRadialDiagonal({ source: source, target: target, angle: angle, radius: radius });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link-radius', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathHorizontalCurve(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y,\n      percent = _ref.percent;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var ix = percent * (dx + dy);\n    var iy = percent * (dy - dx);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.bezierCurveTo(sx + ix, sy + iy, tx + iy, ty - ix, tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkHorizontalCurve.propTypes = {\n  innerRef: prop_types_default.a.func,\n  percent: prop_types_default.a.number,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkHorizontalCurve(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.y;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.x;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      _ref2$percent = _ref2.percent,\n      percent = _ref2$percent === undefined ? 0.2 : _ref2$percent,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target', 'percent']);\n\n  path$$1 = path$$1 || pathHorizontalCurve({ source: source, target: target, x: x, y: y, percent: percent });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathVerticalCurve(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y,\n      percent = _ref.percent;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var ix = percent * (dx + dy);\n    var iy = percent * (dy - dx);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.bezierCurveTo(sx + ix, sy + iy, tx + iy, ty - ix, tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkVerticalCurve.propTypes = {\n  innerRef: prop_types_default.a.func,\n  percent: prop_types_default.a.number,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkVerticalCurve(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      _ref2$percent = _ref2.percent,\n      percent = _ref2$percent === undefined ? 0.2 : _ref2$percent,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target', 'percent']);\n\n  path$$1 = path$$1 || pathVerticalCurve({ source: source, target: target, x: x, y: y, percent: percent });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathRadialCurve(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y,\n      percent = _ref.percent;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sa = x(sourceData) - Math.PI / 2;\n    var sr = y(sourceData);\n    var ta = x(targetData) - Math.PI / 2;\n    var tr = y(targetData);\n\n    var sc = Math.cos(sa);\n    var ss = Math.sin(sa);\n    var tc = Math.cos(ta);\n    var ts = Math.sin(ta);\n\n    var sx = sr * sc;\n    var sy = sr * ss;\n    var tx = tr * tc;\n    var ty = tr * ts;\n\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var ix = percent * (dx + dy);\n    var iy = percent * (dy - dx);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.bezierCurveTo(sx + ix, sy + iy, tx + iy, ty - ix, tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkRadialCurve.propTypes = {\n  innerRef: prop_types_default.a.func,\n  percent: prop_types_default.a.number,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkRadialCurve(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      _ref2$percent = _ref2.percent,\n      percent = _ref2$percent === undefined ? 0.2 : _ref2$percent,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target', 'percent']);\n\n  path$$1 = path$$1 || pathRadialCurve({ source: source, target: target, x: x, y: y, percent: percent });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathHorizontalLine(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.lineTo(tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkHorizontalLine.propTypes = {\n  innerRef: prop_types_default.a.func,\n  path: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func\n};\n\nfunction LinkHorizontalLine(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.y;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.x;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathHorizontalLine({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathVerticalLine(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.lineTo(tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkVerticalLine.propTypes = {\n  innerRef: prop_types_default.a.func,\n  path: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func\n};\n\nfunction LinkVerticalLine(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathVerticalLine({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathRadialLine(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sa = x(sourceData) - Math.PI / 2;\n    var sr = y(sourceData);\n    var ta = x(targetData) - Math.PI / 2;\n    var tr = y(targetData);\n\n    var sc = Math.cos(sa);\n    var ss = Math.sin(sa);\n    var tc = Math.cos(ta);\n    var ts = Math.sin(ta);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sr * sc, sr * ss);\n    path$$1.lineTo(tr * tc, tr * ts);\n\n    return path$$1.toString();\n  };\n}\n\nLinkRadialStep.propTypes = {\n  innerRef: prop_types_default.a.func,\n  path: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func\n};\n\nfunction LinkRadialStep(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathRadialLine({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathHorizontalStep(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y,\n      percent = _ref.percent;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.lineTo(sx + (tx - sx) * percent, sy);\n    path$$1.lineTo(sx + (tx - sx) * percent, ty);\n    path$$1.lineTo(tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkHorizontalStep.propTypes = {\n  innerRef: prop_types_default.a.func,\n  percent: prop_types_default.a.number,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkHorizontalStep(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$percent = _ref2.percent,\n      percent = _ref2$percent === undefined ? 0.5 : _ref2$percent,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.y;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.x;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'percent', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathHorizontalStep({ source: source, target: target, x: x, y: y, percent: percent });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathVerticalStep(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y,\n      percent = _ref.percent;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var path$$1 = Object(path[\"a\" /* default */])();\n    path$$1.moveTo(sx, sy);\n    path$$1.lineTo(sx, sy + (ty - sy) * percent);\n    path$$1.lineTo(tx, sy + (ty - sy) * percent);\n    path$$1.lineTo(tx, ty);\n\n    return path$$1.toString();\n  };\n}\n\nLinkVerticalStep.propTypes = {\n  innerRef: prop_types_default.a.func,\n  percent: prop_types_default.a.number,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkVerticalStep(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$percent = _ref2.percent,\n      percent = _ref2$percent === undefined ? 0.5 : _ref2$percent,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'percent', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathVerticalStep({ source: source, target: target, x: x, y: y, percent: percent });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nfunction pathRadialStep(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n\n  return function (data) {\n    var sourceData = source(data);\n    var targetData = target(data);\n\n    var sx = x(sourceData);\n    var sy = y(sourceData);\n    var tx = x(targetData);\n    var ty = y(targetData);\n\n    var sa = sx - Math.PI / 2;\n    var sr = sy;\n    var ta = tx - Math.PI / 2;\n    var tr = ty;\n\n    var sc = Math.cos(sa);\n    var ss = Math.sin(sa);\n    var tc = Math.cos(ta);\n    var ts = Math.sin(ta);\n    var sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n\n    return '\\n      M' + sr * sc + ',' + sr * ss + '\\n      A' + sr + ',' + sr + ',0,0,' + (sf ? 1 : 0) + ',' + sr * tc + ',' + sr * ts + '\\n      L' + tr * tc + ',' + tr * ts + '\\n    ';\n  };\n}\n\nLinkRadialStep$1.propTypes = {\n  innerRef: prop_types_default.a.func,\n  x: prop_types_default.a.func,\n  y: prop_types_default.a.func,\n  source: prop_types_default.a.func,\n  target: prop_types_default.a.func,\n  path: prop_types_default.a.func\n};\n\nfunction LinkRadialStep$1(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path$$1 = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === undefined ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === undefined ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === undefined ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === undefined ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      restProps = vx_shape_es_objectWithoutProperties(_ref2, ['className', 'innerRef', 'data', 'path', 'x', 'y', 'source', 'target']);\n\n  path$$1 = path$$1 || pathRadialStep({ source: source, target: target, x: x, y: y });\n  return react_default.a.createElement('path', vx_shape_es_extends({\n    ref: innerRef,\n    className: classnames_default()('vx-link', className),\n    d: path$$1(data)\n  }, additionalProps(restProps, data)));\n}\n\nPolygon.propTypes = {\n  sides: prop_types_default.a.number.isRequired,\n  size: prop_types_default.a.number.isRequired,\n  className: prop_types_default.a.string,\n  rotate: prop_types_default.a.number,\n  fill: prop_types_default.a.string,\n  strokeDasharray: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  stroke: prop_types_default.a.string\n};\n\nvar vx_shape_es_getPoint = function getPoint(_ref) {\n  var sides = _ref.sides,\n      size = _ref.size,\n      center = _ref.center,\n      rotate = _ref.rotate,\n      side = _ref.side;\n\n  var degrees = 360 / sides * side - rotate;\n  var radians = degreesToRadians(degrees);\n\n  return new vx_point_es[\"Point\"]({\n    x: center.x + size * Math.cos(radians),\n    y: center.y + size * Math.sin(radians)\n  });\n};\n\nvar getPoints = function getPoints(_ref2) {\n  var sides = _ref2.sides,\n      size = _ref2.size,\n      center = _ref2.center,\n      rotate = _ref2.rotate;\n  return [].concat(toConsumableArray(Array(sides).keys())).map(function (side) {\n    return vx_shape_es_getPoint({\n      sides: sides,\n      size: size,\n      center: center,\n      rotate: rotate,\n      side: side\n    });\n  });\n};\n\nfunction Polygon(_ref3) {\n  var sides = _ref3.sides,\n      _ref3$size = _ref3.size,\n      size = _ref3$size === undefined ? 25 : _ref3$size,\n      _ref3$center = _ref3.center,\n      center = _ref3$center === undefined ? new vx_point_es[\"Point\"]({ x: 0, y: 0 }) : _ref3$center,\n      _ref3$rotate = _ref3.rotate,\n      rotate = _ref3$rotate === undefined ? 0 : _ref3$rotate,\n      className = _ref3.className,\n      clickHandler = _ref3.clickHandler,\n      fill = _ref3.fill,\n      strokeDasharray = _ref3.strokeDasharray,\n      _ref3$strokeWidth = _ref3.strokeWidth,\n      _ref3$stroke = _ref3.stroke,\n      restProps = vx_shape_es_objectWithoutProperties(_ref3, ['sides', 'size', 'center', 'rotate', 'className', 'clickHandler', 'fill', 'strokeDasharray', 'strokeWidth', 'stroke']);\n\n  var points = getPoints({\n    sides: sides,\n    size: size,\n    center: center,\n    rotate: rotate\n  }).map(function (p) {\n    return p.toArray();\n  }).join(' ');\n\n  return react_default.a.createElement('polygon', vx_shape_es_extends({ points: points, className: className, fill: fill }, restProps));\n}\n\n\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/axis/node_modules/@vx/text/dist/vx-text.es.js\nvar vx_text_es = __webpack_require__(1914);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/axis/dist/vx-axis.es.js\n\n\n\n\n\n\n\n\nfunction vx_axis_es_center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function (d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar ORIENT = {\n  top: 'top',\n  left: 'left',\n  right: 'right',\n  bottom: 'bottom'\n};\n\nfunction labelTransform(_ref) {\n  var labelOffset = _ref.labelOffset,\n      labelProps = _ref.labelProps,\n      orientation = _ref.orientation,\n      range = _ref.range,\n      tickLabelFontSize = _ref.tickLabelFontSize,\n      tickLength = _ref.tickLength;\n\n  var sign = orientation === ORIENT.left || orientation === ORIENT.top ? -1 : 1;\n\n  var x = void 0,\n      y = void 0,\n      transform = null;\n  if (orientation === ORIENT.top || orientation === ORIENT.bottom) {\n    x = (range[0] + range[range.length - 1]) / 2;\n    y = sign * (tickLength + labelOffset + tickLabelFontSize + (orientation === ORIENT.bottom ? labelProps.fontSize : 0));\n  } else {\n    x = sign * ((range[0] + range[range.length - 1]) / 2);\n    y = -(tickLength + labelOffset);\n    transform = 'rotate(' + sign * 90 + ')';\n  }\n\n  return { x: x, y: y, transform: transform };\n}\n\nvar vx_axis_es_extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar propTypes = {\n  axisClassName: prop_types_default.a.string,\n  axisLineClassName: prop_types_default.a.string,\n  hideAxisLine: prop_types_default.a.bool,\n  hideTicks: prop_types_default.a.bool,\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelClassName: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.object,\n  left: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  orientation: prop_types_default.a.oneOf([ORIENT.top, ORIENT.right, ORIENT.bottom, ORIENT.left]),\n  rangePadding: prop_types_default.a.number,\n  scale: prop_types_default.a.func.isRequired,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  strokeDasharray: prop_types_default.a.string,\n  tickClassName: prop_types_default.a.string,\n  tickFormat: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickLength: prop_types_default.a.number,\n  tickStroke: prop_types_default.a.string,\n  tickTransform: prop_types_default.a.string,\n  tickValues: prop_types_default.a.array,\n  tickComponent: prop_types_default.a.func,\n  top: prop_types_default.a.number,\n  children: prop_types_default.a.func\n};\n\nfunction vx_axis_es_Axis(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      _ref$hideAxisLine = _ref.hideAxisLine,\n      hideAxisLine = _ref$hideAxisLine === undefined ? false : _ref$hideAxisLine,\n      _ref$hideTicks = _ref.hideTicks,\n      hideTicks = _ref$hideTicks === undefined ? false : _ref$hideTicks,\n      _ref$hideZero = _ref.hideZero,\n      hideZero = _ref$hideZero === undefined ? false : _ref$hideZero,\n      _ref$label = _ref.label,\n      label = _ref$label === undefined ? '' : _ref$label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === undefined ? 14 : _ref$labelOffset,\n      _ref$labelProps = _ref.labelProps,\n      labelProps = _ref$labelProps === undefined ? {\n    textAnchor: 'middle',\n    fontFamily: 'Arial',\n    fontSize: 10,\n    fill: 'black'\n  } : _ref$labelProps,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === undefined ? 10 : _ref$numTicks,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === undefined ? ORIENT.bottom : _ref$orientation,\n      _ref$rangePadding = _ref.rangePadding,\n      rangePadding = _ref$rangePadding === undefined ? 0 : _ref$rangePadding,\n      scale = _ref.scale,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? 'black' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === undefined ? function (tickValue, index) {\n    return {\n      textAnchor: 'middle',\n      fontFamily: 'Arial',\n      fontSize: 10,\n      fill: 'black'\n    };\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === undefined ? 8 : _ref$tickLength,\n      _ref$tickStroke = _ref.tickStroke,\n      tickStroke = _ref$tickStroke === undefined ? 'black' : _ref$tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top;\n\n  var values = scale.ticks ? scale.ticks(numTicks) : scale.domain();\n  if (tickValues) values = tickValues;\n  var format = scale.tickFormat ? scale.tickFormat() : identity;\n  if (tickFormat) format = tickFormat;\n\n  var range = scale.range();\n  var range0 = range[0] + 0.5 - rangePadding;\n  var range1 = range[range.length - 1] + 0.5 + rangePadding;\n\n  var horizontal = orientation !== ORIENT.left && orientation !== ORIENT.right;\n  var isLeft = orientation === ORIENT.left;\n  var isTop = orientation === ORIENT.top;\n  var tickSign = isLeft || isTop ? -1 : 1;\n\n  var position = (scale.bandwidth ? vx_axis_es_center : identity)(scale.copy());\n\n  var axisFromPoint = new vx_point_es[\"Point\"]({\n    x: horizontal ? range0 : 0,\n    y: horizontal ? 0 : range0\n  });\n  var axisToPoint = new vx_point_es[\"Point\"]({\n    x: horizontal ? range1 : 0,\n    y: horizontal ? 0 : range1\n  });\n\n  var tickLabelFontSize = 10; // track the max tick label size to compute label offset\n\n  if (!!children) {\n    return react_default.a.createElement(\n      Group,\n      { className: classnames_default()('vx-axis', axisClassName), top: top, left: left },\n      children({\n        axisFromPoint: axisFromPoint,\n        axisToPoint: axisToPoint,\n        horizontal: horizontal,\n        tickSign: tickSign,\n        numTicks: numTicks,\n        label: label,\n        rangePadding: rangePadding,\n        tickLength: tickLength,\n        tickFormat: format,\n        tickPosition: position,\n        ticks: values.map(function (value, index) {\n          var from = new vx_point_es[\"Point\"]({\n            x: horizontal ? position(value) : 0,\n            y: horizontal ? 0 : position(value)\n          });\n          var to = new vx_point_es[\"Point\"]({\n            x: horizontal ? position(value) : tickSign * tickLength,\n            y: horizontal ? tickLength * tickSign : position(value)\n          });\n          return {\n            value: value,\n            index: index,\n            from: from,\n            to: to,\n            formattedValue: format(value, index)\n          };\n        })\n      })\n    );\n  }\n\n  return react_default.a.createElement(\n    Group,\n    { className: classnames_default()('vx-axis', axisClassName), top: top, left: left },\n    values.map(function (val, index) {\n      if (hideZero && val === 0) return null;\n\n      var tickFromPoint = new vx_point_es[\"Point\"]({\n        x: horizontal ? position(val) : 0,\n        y: horizontal ? 0 : position(val)\n      });\n      var tickToPoint = new vx_point_es[\"Point\"]({\n        x: horizontal ? position(val) : tickSign * tickLength,\n        y: horizontal ? tickLength * tickSign : position(val)\n      });\n\n      var tickLabelPropsObj = tickLabelProps(val, index);\n      tickLabelFontSize = Math.max(tickLabelFontSize, tickLabelPropsObj.fontSize || 0);\n\n      return react_default.a.createElement(\n        Group,\n        {\n          key: 'vx-tick-' + val + '-' + index,\n          className: classnames_default()('vx-axis-tick', tickClassName),\n          transform: tickTransform\n        },\n        !hideTicks && react_default.a.createElement(Line, { from: tickFromPoint, to: tickToPoint, stroke: tickStroke }),\n        tickComponent ? tickComponent(vx_axis_es_extends({\n          x: tickToPoint.x,\n          y: tickToPoint.y + (horizontal && !isTop ? tickLabelFontSize : 0),\n          formattedValue: format(val, index)\n        }, tickLabelPropsObj)) : react_default.a.createElement(\n          vx_text_es[\"a\" /* Text */],\n          vx_axis_es_extends({\n            x: tickToPoint.x,\n            y: tickToPoint.y + (horizontal && !isTop ? tickLabelFontSize : 0)\n          }, tickLabelPropsObj),\n          format(val, index)\n        )\n      );\n    }),\n    !hideAxisLine && react_default.a.createElement(Line, {\n      className: classnames_default()('vx-axis-line', axisLineClassName),\n      from: axisFromPoint,\n      to: axisToPoint,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray\n    }),\n    label && react_default.a.createElement(\n      vx_text_es[\"a\" /* Text */],\n      vx_axis_es_extends({\n        className: classnames_default()('vx-axis-label', labelClassName)\n      }, labelTransform({\n        labelOffset: labelOffset,\n        labelProps: labelProps,\n        orientation: orientation,\n        range: range,\n        tickLabelFontSize: tickLabelFontSize,\n        tickLength: tickLength\n      }), labelProps),\n      label\n    )\n  );\n}\n\nvx_axis_es_Axis.propTypes = propTypes;\n\nvar propTypes$1 = {\n  axisClassName: prop_types_default.a.string,\n  axisLineClassName: prop_types_default.a.string,\n  hideAxisLine: prop_types_default.a.bool,\n  hideTicks: prop_types_default.a.bool,\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelClassName: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.object,\n  left: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  rangePadding: prop_types_default.a.number,\n  scale: prop_types_default.a.func.isRequired,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  strokeDasharray: prop_types_default.a.string,\n  tickClassName: prop_types_default.a.string,\n  tickFormat: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickLength: prop_types_default.a.number,\n  tickStroke: prop_types_default.a.string,\n  tickTransform: prop_types_default.a.string,\n  tickValues: prop_types_default.a.array,\n  tickComponent: prop_types_default.a.func,\n  top: prop_types_default.a.number,\n  children: prop_types_default.a.func\n};\n\nfunction AxisLeft(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      hideZero = _ref.hideZero,\n      label = _ref.label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === undefined ? 36 : _ref$labelOffset,\n      labelProps = _ref.labelProps,\n      left = _ref.left,\n      numTicks = _ref.numTicks,\n      rangePadding = _ref.rangePadding,\n      scale = _ref.scale,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === undefined ? function (_ref2) {\n    var tick = _ref2.tick,\n        index = _ref2.index;\n    return {\n      dx: '-0.25em',\n      dy: '0.25em',\n      fill: 'black',\n      fontFamily: 'Arial',\n      fontSize: 10,\n      textAnchor: 'end'\n    };\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === undefined ? 8 : _ref$tickLength,\n      tickStroke = _ref.tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      top = _ref.top;\n\n  return react_default.a.createElement(vx_axis_es_Axis, {\n    axisClassName: classnames_default()('vx-axis-left', axisClassName),\n    axisLineClassName: axisLineClassName,\n    hideAxisLine: hideAxisLine,\n    hideTicks: hideTicks,\n    hideZero: hideZero,\n    label: label,\n    labelClassName: labelClassName,\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    left: left,\n    numTicks: numTicks,\n    orientation: ORIENT.left,\n    rangePadding: rangePadding,\n    scale: scale,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    tickClassName: tickClassName,\n    tickFormat: tickFormat,\n    tickLabelProps: tickLabelProps,\n    tickLength: tickLength,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    tickValues: tickValues,\n    tickComponent: tickComponent,\n    top: top,\n    children: children\n  });\n}\n\nAxisLeft.propTypes = propTypes$1;\n\nvar propTypes$2 = {\n  axisClassName: prop_types_default.a.string,\n  axisLineClassName: prop_types_default.a.string,\n  hideAxisLine: prop_types_default.a.bool,\n  hideTicks: prop_types_default.a.bool,\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelClassName: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.object,\n  left: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  rangePadding: prop_types_default.a.number,\n  scale: prop_types_default.a.func.isRequired,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  strokeDasharray: prop_types_default.a.string,\n  tickClassName: prop_types_default.a.string,\n  tickFormat: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickLength: prop_types_default.a.number,\n  tickStroke: prop_types_default.a.string,\n  tickTransform: prop_types_default.a.string,\n  tickValues: prop_types_default.a.array,\n  tickComponent: prop_types_default.a.func,\n  top: prop_types_default.a.number,\n  children: prop_types_default.a.func\n};\n\nfunction AxisRight(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      hideZero = _ref.hideZero,\n      label = _ref.label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === undefined ? 36 : _ref$labelOffset,\n      labelProps = _ref.labelProps,\n      left = _ref.left,\n      numTicks = _ref.numTicks,\n      rangePadding = _ref.rangePadding,\n      scale = _ref.scale,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === undefined ? function (_ref2) {\n    var tick = _ref2.tick,\n        index = _ref2.index;\n    return {\n      dx: '0.25em',\n      dy: '0.25em',\n      fill: 'black',\n      fontFamily: 'Arial',\n      fontSize: 10,\n      textAnchor: 'start'\n    };\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === undefined ? 8 : _ref$tickLength,\n      tickStroke = _ref.tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      top = _ref.top;\n\n  return react_default.a.createElement(vx_axis_es_Axis, {\n    axisClassName: classnames_default()('vx-axis-right', axisClassName),\n    axisLineClassName: axisLineClassName,\n    hideAxisLine: hideAxisLine,\n    hideTicks: hideTicks,\n    hideZero: hideZero,\n    label: label,\n    labelClassName: labelClassName,\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    left: left,\n    numTicks: numTicks,\n    orientation: ORIENT.right,\n    rangePadding: rangePadding,\n    scale: scale,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    tickClassName: tickClassName,\n    tickFormat: tickFormat,\n    tickLabelProps: tickLabelProps,\n    tickLength: tickLength,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    tickValues: tickValues,\n    tickComponent: tickComponent,\n    top: top,\n    children: children\n  });\n}\n\nAxisRight.propTypes = propTypes$2;\n\nvar propTypes$3 = {\n  axisClassName: prop_types_default.a.string,\n  axisLineClassName: prop_types_default.a.string,\n  hideAxisLine: prop_types_default.a.bool,\n  hideTicks: prop_types_default.a.bool,\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelClassName: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.object,\n  left: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  rangePadding: prop_types_default.a.number,\n  scale: prop_types_default.a.func.isRequired,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  strokeDasharray: prop_types_default.a.string,\n  tickClassName: prop_types_default.a.string,\n  tickFormat: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickLength: prop_types_default.a.number,\n  tickStroke: prop_types_default.a.string,\n  tickTransform: prop_types_default.a.string,\n  tickValues: prop_types_default.a.array,\n  tickComponent: prop_types_default.a.func,\n  top: prop_types_default.a.number,\n  children: prop_types_default.a.func\n};\n\nfunction AxisTop(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      hideZero = _ref.hideZero,\n      label = _ref.label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === undefined ? 8 : _ref$labelOffset,\n      labelProps = _ref.labelProps,\n      left = _ref.left,\n      numTicks = _ref.numTicks,\n      rangePadding = _ref.rangePadding,\n      scale = _ref.scale,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === undefined ? function (_ref2) {\n    var tick = _ref2.tick,\n        index = _ref2.index;\n    return {\n      dy: '-0.25em',\n      fill: 'black',\n      fontFamily: 'Arial',\n      fontSize: 10,\n      textAnchor: 'middle'\n    };\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === undefined ? 8 : _ref$tickLength,\n      tickStroke = _ref.tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      top = _ref.top;\n\n  return react_default.a.createElement(vx_axis_es_Axis, {\n    axisClassName: classnames_default()('vx-axis-top', axisClassName),\n    axisLineClassName: axisLineClassName,\n    hideAxisLine: hideAxisLine,\n    hideTicks: hideTicks,\n    hideZero: hideZero,\n    label: label,\n    labelClassName: labelClassName,\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    left: left,\n    numTicks: numTicks,\n    orientation: ORIENT.top,\n    rangePadding: rangePadding,\n    scale: scale,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    tickClassName: tickClassName,\n    tickFormat: tickFormat,\n    tickLabelProps: tickLabelProps,\n    tickLength: tickLength,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    tickValues: tickValues,\n    tickComponent: tickComponent,\n    top: top,\n    children: children\n  });\n}\n\nAxisTop.propTypes = propTypes$3;\n\nvar propTypes$4 = {\n  axisClassName: prop_types_default.a.string,\n  axisLineClassName: prop_types_default.a.string,\n  hideAxisLine: prop_types_default.a.bool,\n  hideTicks: prop_types_default.a.bool,\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelClassName: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.object,\n  left: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  rangePadding: prop_types_default.a.number,\n  scale: prop_types_default.a.func.isRequired,\n  stroke: prop_types_default.a.string,\n  strokeWidth: prop_types_default.a.number,\n  strokeDasharray: prop_types_default.a.string,\n  tickClassName: prop_types_default.a.string,\n  tickFormat: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickLength: prop_types_default.a.number,\n  tickStroke: prop_types_default.a.string,\n  tickTransform: prop_types_default.a.string,\n  tickValues: prop_types_default.a.array,\n  tickComponent: prop_types_default.a.func,\n  top: prop_types_default.a.number,\n  children: prop_types_default.a.func\n};\n\nfunction AxisBottom(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      hideZero = _ref.hideZero,\n      label = _ref.label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === undefined ? 8 : _ref$labelOffset,\n      labelProps = _ref.labelProps,\n      left = _ref.left,\n      numTicks = _ref.numTicks,\n      rangePadding = _ref.rangePadding,\n      scale = _ref.scale,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === undefined ? function (_ref2) {\n    var tick = _ref2.tick,\n        index = _ref2.index;\n    return {\n      dy: '0.25em',\n      fill: 'black',\n      fontFamily: 'Arial',\n      fontSize: 10,\n      textAnchor: 'middle'\n    };\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === undefined ? 8 : _ref$tickLength,\n      tickStroke = _ref.tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      top = _ref.top;\n\n  return react_default.a.createElement(vx_axis_es_Axis, {\n    axisClassName: classnames_default()('vx-axis-bottom', axisClassName),\n    axisLineClassName: axisLineClassName,\n    hideAxisLine: hideAxisLine,\n    hideTicks: hideTicks,\n    hideZero: hideZero,\n    label: label,\n    labelClassName: labelClassName,\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    left: left,\n    numTicks: numTicks,\n    orientation: ORIENT.bottom,\n    rangePadding: rangePadding,\n    scale: scale,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    tickClassName: tickClassName,\n    tickFormat: tickFormat,\n    tickLabelProps: tickLabelProps,\n    tickLength: tickLength,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    tickValues: tickValues,\n    tickComponent: tickComponent,\n    top: top,\n    children: children\n  });\n}\n\nAxisBottom.propTypes = propTypes$4;\n\n\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/propShapes.js\nvar propShapes = __webpack_require__(1826);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/axis/XAxis.js\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n\n\n\n\nvar XAxis_propTypes = {\n  axisStyles: propShapes[\"b\" /* axisStylesShape */],\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelOffset: prop_types_default.a.number,\n  labelProps: prop_types_default.a.objectOf(prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])),\n  numTicks: prop_types_default.a.number,\n  orientation: prop_types_default.a.oneOf(['bottom', 'top']),\n  rangePadding: prop_types_default.a.number,\n  tickStyles: propShapes[\"l\" /* tickStylesShape */],\n  tickComponent: prop_types_default.a.func,\n  tickLabelProps: prop_types_default.a.func,\n  tickFormat: prop_types_default.a.func,\n  tickValues: prop_types_default.a.arrayOf( // number or date/moment object\n  prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.object, prop_types_default.a.string])),\n  // probably injected by parent\n  innerHeight: prop_types_default.a.number,\n  scale: prop_types_default.a.func\n};\nvar defaultProps = {\n  axisStyles: {},\n  hideZero: false,\n  innerHeight: null,\n  label: null,\n  labelOffset: 14,\n  labelProps: null,\n  numTicks: null,\n  orientation: 'bottom',\n  rangePadding: null,\n  scale: null,\n  tickComponent: null,\n  tickFormat: null,\n  tickLabelProps: null,\n  tickStyles: {},\n  tickValues: undefined\n};\n\nvar XAxis_XAxis =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(XAxis, _React$PureComponent);\n\n  function XAxis() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = XAxis.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        axisStyles = _this$props.axisStyles,\n        innerHeight = _this$props.innerHeight,\n        hideZero = _this$props.hideZero,\n        label = _this$props.label,\n        labelOffset = _this$props.labelOffset,\n        labelProps = _this$props.labelProps,\n        numTicks = _this$props.numTicks,\n        orientation = _this$props.orientation,\n        rangePadding = _this$props.rangePadding,\n        scale = _this$props.scale,\n        tickComponent = _this$props.tickComponent,\n        tickFormat = _this$props.tickFormat,\n        passedTickLabelProps = _this$props.tickLabelProps,\n        tickStyles = _this$props.tickStyles,\n        tickValues = _this$props.tickValues;\n    if (!scale || !innerHeight) return null;\n    var Axis = orientation === 'bottom' ? AxisBottom : AxisTop;\n    var tickLabelProps = passedTickLabelProps;\n\n    if (!tickLabelProps) {\n      tickLabelProps = tickStyles.label && tickStyles.label[orientation] ? function () {\n        return tickStyles.label[orientation];\n      } : undefined;\n    }\n\n    return react_default.a.createElement(Axis, {\n      top: orientation === 'bottom' ? innerHeight : 0,\n      left: 0,\n      rangePadding: rangePadding,\n      hideTicks: numTicks === 0,\n      hideZero: hideZero,\n      label: label,\n      labelOffset: labelOffset,\n      labelProps: labelProps || (axisStyles.label || {})[orientation],\n      numTicks: numTicks,\n      scale: scale,\n      stroke: axisStyles.stroke,\n      strokeWidth: axisStyles.strokeWidth,\n      tickComponent: tickComponent,\n      tickFormat: tickFormat,\n      tickLabelProps: tickLabelProps,\n      tickLength: tickStyles.tickLength,\n      tickStroke: tickStyles.stroke,\n      tickValues: tickValues\n    });\n  };\n\n  return XAxis;\n}(react_default.a.PureComponent);\n\n\nXAxis_XAxis.propTypes = XAxis_propTypes;\nXAxis_XAxis.defaultProps = defaultProps;\nXAxis_XAxis.displayName = 'XAxis';\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/axis/YAxis.js\nfunction YAxis_extends() { YAxis_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return YAxis_extends.apply(this, arguments); }\n\nfunction YAxis_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n\n\n\n\nvar YAxis_propTypes = {\n  axisStyles: propShapes[\"b\" /* axisStylesShape */],\n  hideZero: prop_types_default.a.bool,\n  label: prop_types_default.a.string,\n  labelProps: prop_types_default.a.objectOf(prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])),\n  labelOffset: prop_types_default.a.number,\n  numTicks: prop_types_default.a.number,\n  orientation: prop_types_default.a.oneOf(['left', 'right']),\n  rangePadding: prop_types_default.a.number,\n  tickComponent: prop_types_default.a.func,\n  tickStyles: propShapes[\"l\" /* tickStylesShape */],\n  tickLabelProps: prop_types_default.a.func,\n  tickFormat: prop_types_default.a.func,\n  tickValues: prop_types_default.a.arrayOf( // number or date/moment object\n  prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.object, prop_types_default.a.string])),\n  // probably injected by parent\n  innerWidth: prop_types_default.a.number,\n  height: prop_types_default.a.number,\n  scale: prop_types_default.a.func\n};\nvar YAxis_defaultProps = {\n  axisStyles: {},\n  hideZero: false,\n  innerWidth: null,\n  height: null,\n  label: null,\n  labelProps: null,\n  labelOffset: undefined,\n  numTicks: null,\n  orientation: 'right',\n  rangePadding: null,\n  scale: null,\n  tickComponent: null,\n  tickFormat: null,\n  tickLabelProps: null,\n  tickStyles: {},\n  tickValues: undefined\n};\n\nvar YAxis_YAxis =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  YAxis_inheritsLoose(YAxis, _React$PureComponent);\n\n  function YAxis() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = YAxis.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        axisStyles = _this$props.axisStyles,\n        hideZero = _this$props.hideZero,\n        innerWidth = _this$props.innerWidth,\n        height = _this$props.height,\n        label = _this$props.label,\n        labelProps = _this$props.labelProps,\n        labelOffset = _this$props.labelOffset,\n        numTicks = _this$props.numTicks,\n        orientation = _this$props.orientation,\n        rangePadding = _this$props.rangePadding,\n        scale = _this$props.scale,\n        tickComponent = _this$props.tickComponent,\n        tickFormat = _this$props.tickFormat,\n        passedTickLabelProps = _this$props.tickLabelProps,\n        tickStyles = _this$props.tickStyles,\n        tickValues = _this$props.tickValues;\n    if (!scale || !innerWidth) return null;\n    var Axis = orientation === 'left' ? AxisLeft : AxisRight;\n    var tickLabelProps = passedTickLabelProps;\n\n    if (!tickLabelProps) {\n      tickLabelProps = tickStyles.label && tickStyles.label[orientation] ? function () {\n        return tickStyles.label[orientation];\n      } : undefined;\n    }\n\n    return react_default.a.createElement(Axis, {\n      top: 0,\n      left: orientation === 'right' ? innerWidth : 0,\n      rangePadding: rangePadding,\n      hideTicks: numTicks === 0,\n      hideZero: hideZero,\n      label: label,\n      labelProps: YAxis_extends({\n        verticalAnchor: 'start',\n        width: Math.max.apply(Math, scale.range().concat([height || 0]))\n      }, labelProps || (axisStyles.label || {})[orientation]),\n      labelOffset: labelOffset,\n      numTicks: numTicks,\n      scale: scale,\n      stroke: axisStyles.stroke,\n      strokeWidth: axisStyles.strokeWidth,\n      tickComponent: tickComponent,\n      tickFormat: tickFormat,\n      tickLabelProps: tickLabelProps,\n      tickLength: tickStyles.tickLength,\n      tickStroke: tickStyles.stroke,\n      tickValues: tickValues\n    });\n  };\n\n  return YAxis;\n}(react_default.a.PureComponent);\n\n\nYAxis_YAxis.propTypes = YAxis_propTypes;\nYAxis_YAxis.defaultProps = YAxis_defaultProps;\nYAxis_YAxis.displayName = 'YAxis';\n// EXTERNAL MODULE: ../superset-ui-core/src/index.ts\nvar src = __webpack_require__(3);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/ChartFrame.tsx\nvar ChartFrame = __webpack_require__(980);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/createTickComponent.tsx\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\nfunction createTickComponent({ axisWidth, labelAngle, labelFlush, labelOverlap, orient, tickLabels, tickLabelDimensions, tickTextAnchor = 'middle', }) {\n    if (labelOverlap === 'rotate' && labelAngle !== 0) {\n        let xOffset = labelAngle > 0 ? -6 : 6;\n        if (orient === 'top') {\n            xOffset = 0;\n        }\n        const yOffset = orient === 'top' ? -3 : 0;\n        return (_a) => {\n            var { x, y, dy, formattedValue = '' } = _a, textStyle = __rest(_a, [\"x\", \"y\", \"dy\", \"formattedValue\"]);\n            return (react_default.a.createElement(\"g\", { transform: `translate(${x + xOffset}, ${y + yOffset})` },\n                react_default.a.createElement(\"text\", Object.assign({ transform: `rotate(${labelAngle})` }, textStyle, { textAnchor: tickTextAnchor }), formattedValue)));\n        };\n    }\n    if (labelFlush === true || typeof labelFlush === 'number') {\n        const labelToDimensionMap = new Map();\n        tickLabels.forEach((label, i) => {\n            labelToDimensionMap.set(label, tickLabelDimensions[i]);\n        });\n        return (_a) => {\n            var { x, y, dy, formattedValue = '' } = _a, textStyle = __rest(_a, [\"x\", \"y\", \"dy\", \"formattedValue\"]);\n            const dimension = labelToDimensionMap.get(formattedValue);\n            const labelWidth = typeof dimension === 'undefined' ? 0 : dimension.width;\n            let textAnchor = tickTextAnchor;\n            let xOffset = 0;\n            if (x - labelWidth / 2 < 0) {\n                textAnchor = 'start';\n                if (typeof labelFlush === 'number') {\n                    xOffset -= labelFlush;\n                }\n            }\n            else if (x + labelWidth / 2 > axisWidth) {\n                textAnchor = 'end';\n                if (typeof labelFlush === 'number') {\n                    xOffset += labelFlush;\n                }\n            }\n            return (react_default.a.createElement(\"text\", Object.assign({ x: x + xOffset, y: y }, textStyle, { textAnchor: textAnchor }), formattedValue));\n        };\n    }\n    // This will render the tick as horizontal string.\n    return null;\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/computeAxisLayout.ts\n\nfunction computeAxisLayout(axis, { axisTitleHeight = 20, axisWidth, gapBetweenAxisLabelAndBorder = 4, gapBetweenTickAndTickLabel = 4, defaultTickSize = 8, tickTextStyle = {}, }) {\n    const tickLabels = axis.getTickLabels();\n    const tickLabelDimensions = tickLabels.map((text) => Object(src[\"getTextDimension\"])({\n        style: tickTextStyle,\n        text,\n    }));\n    const { labelAngle, labelFlush, labelOverlap, labelPadding, orient, tickSize = defaultTickSize, } = axis.config;\n    const maxWidth = Math.max(...tickLabelDimensions.map(d => d.width), 0);\n    // cheap heuristic, can improve\n    const widthPerTick = axisWidth / tickLabels.length;\n    const isLabelOverlap = maxWidth > widthPerTick;\n    const labelAngleIfOverlap = labelOverlap.strategy === 'rotate' ? labelOverlap.labelAngle : 0;\n    const labelAngleAfterOverlapCheck = isLabelOverlap ? labelAngleIfOverlap : 0;\n    const finalLabelAngle = labelAngle === 0 ? labelAngleAfterOverlapCheck : labelAngle;\n    const spaceForAxisTitle = axis.hasTitle() ? labelPadding + axisTitleHeight : 0;\n    let tickTextAnchor = 'middle';\n    let labelOffset = 0;\n    let requiredMargin = tickSize + gapBetweenTickAndTickLabel + spaceForAxisTitle + gapBetweenAxisLabelAndBorder;\n    if (axis.channelEncoder.isX()) {\n        if (finalLabelAngle === 0) {\n            const labelHeight = tickLabelDimensions.length > 0 ? tickLabelDimensions[0].height : 0;\n            labelOffset = labelHeight + labelPadding;\n            requiredMargin += labelHeight;\n        }\n        else {\n            const labelHeight = Math.ceil(Math.abs(maxWidth * Math.sin((finalLabelAngle * Math.PI) / 180)));\n            labelOffset = labelHeight + labelPadding;\n            requiredMargin += labelHeight;\n            tickTextAnchor =\n                (orient === 'top' && finalLabelAngle > 0) || (orient === 'bottom' && finalLabelAngle < 0)\n                    ? 'end'\n                    : 'start';\n        }\n        requiredMargin += 8;\n    }\n    else {\n        labelOffset = maxWidth + spaceForAxisTitle;\n        requiredMargin += maxWidth;\n    }\n    return {\n        axisWidth,\n        labelAngle: finalLabelAngle,\n        labelFlush,\n        labelOffset,\n        labelOverlap: isLabelOverlap ? labelOverlap.strategy : 'flat',\n        minMargin: {\n            [orient]: Math.ceil(requiredMargin),\n        },\n        orient,\n        tickLabelDimensions,\n        tickLabels,\n        tickTextAnchor,\n    };\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/XYChartLayout.tsx\n\n\n\n\n\nconst DEFAULT_LABEL_ANGLE = 40;\n// Additional margin to avoid content hidden behind scroll bar\nconst OVERFLOW_MARGIN = 8;\nclass XYChartLayout_XYChartLayout {\n    constructor(config) {\n        const { width, height, minContentWidth = 0, minContentHeight = 0, margin, xEncoder, xTickSize, xTickTextStyle, autoAdjustXMargin = true, yEncoder, yTickSize, yTickTextStyle, autoAdjustYMargin = true, } = config;\n        this.xEncoder = xEncoder;\n        this.yEncoder = yEncoder;\n        if (typeof yEncoder.axis !== 'undefined') {\n            this.yLayout = computeAxisLayout(yEncoder.axis, {\n                axisWidth: Math.max(height - margin.top - margin.bottom),\n                defaultTickSize: yTickSize,\n                tickTextStyle: yTickTextStyle,\n            });\n        }\n        const secondMargin = this.yLayout && autoAdjustYMargin ? Object(src[\"mergeMargin\"])(margin, this.yLayout.minMargin) : margin;\n        const innerWidth = Math.max(width - secondMargin.left - secondMargin.right, minContentWidth);\n        if (typeof xEncoder.axis !== 'undefined') {\n            this.xLayout = computeAxisLayout(xEncoder.axis, {\n                axisWidth: innerWidth,\n                defaultTickSize: xTickSize,\n                tickTextStyle: xTickTextStyle,\n            });\n        }\n        const finalMargin = this.xLayout && autoAdjustXMargin\n            ? Object(src[\"mergeMargin\"])(secondMargin, this.xLayout.minMargin)\n            : secondMargin;\n        const innerHeight = Math.max(height - finalMargin.top - finalMargin.bottom, minContentHeight);\n        const chartWidth = Math.round(innerWidth + finalMargin.left + finalMargin.right);\n        const chartHeight = Math.round(innerHeight + finalMargin.top + finalMargin.bottom);\n        const isOverFlowX = chartWidth > width;\n        const isOverFlowY = chartHeight > height;\n        if (isOverFlowX) {\n            finalMargin.bottom += OVERFLOW_MARGIN;\n        }\n        if (isOverFlowY) {\n            finalMargin.right += OVERFLOW_MARGIN;\n        }\n        this.chartWidth = isOverFlowX ? chartWidth + OVERFLOW_MARGIN : chartWidth;\n        this.chartHeight = isOverFlowY ? chartHeight + OVERFLOW_MARGIN : chartHeight;\n        this.containerWidth = width;\n        this.containerHeight = height;\n        this.margin = finalMargin;\n    }\n    renderChartWithFrame(renderChart) {\n        return (react_default.a.createElement(ChartFrame[\"a\" /* default */], { width: this.containerWidth, height: this.containerHeight, contentWidth: this.chartWidth, contentHeight: this.chartHeight, renderContent: renderChart }));\n    }\n    renderXAxis(props) {\n        const { axis } = this.xEncoder;\n        return axis && this.xLayout ? (react_default.a.createElement(XAxis_XAxis, Object.assign({ label: axis.getTitle(), labelOffset: this.xLayout.labelOffset, numTicks: axis.config.tickCount, orientation: axis.config.orient, tickComponent: createTickComponent(this.xLayout), tickFormat: axis.formatValue }, props))) : null;\n    }\n    renderYAxis(props) {\n        const { axis } = this.yEncoder;\n        return axis && this.yLayout ? (react_default.a.createElement(YAxis_YAxis, Object.assign({ label: axis.getTitle(), labelOffset: this.yLayout.labelOffset, numTicks: axis.config.tickCount, orientation: axis.config.orient, tickFormat: axis.formatValue }, props))) : null;\n    }\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/createXYChartLayoutWithTheme.ts\nvar createXYChartLayoutWithTheme_rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\nfunction createXYChartLayoutWithTheme(config) {\n    const { theme } = config, rest = createXYChartLayoutWithTheme_rest(config, [\"theme\"]);\n    return new XYChartLayout_XYChartLayout(Object.assign(Object.assign({}, rest), { \n        // @ts-ignore\n        xTickSize: theme.xTickStyles.length || theme.xTickStyles.tickLength, xTickTextStyle: theme.xTickStyles.label.bottom || theme.xTickStyles.label.top, \n        // @ts-ignore\n        yTickSize: theme.yTickStyles.length || theme.yTickStyles.tickLength, yTickTextStyle: theme.yTickStyles.label.left || theme.yTickStyles.label.right }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1916\n")},1918:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ createRenderLegend; });\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/react/index.js\nvar react = __webpack_require__(2);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@vx/legend/esm/legends/Legend/LegendItem.js\nvar LegendItem = __webpack_require__(2290);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@vx/legend/esm/legends/Legend/LegendLabel.js\nvar LegendLabel = __webpack_require__(2291);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/legend/DefaultLegendItem.tsx\n\n\nconst MARK_SIZE = 8;\nconst MARK_STYLE = { display: 'inline-block' };\nfunction DefaultLegendItem({ group, item, MarkRenderer, LabelRenderer, }) {\n    var _a, _b, _c, _d;\n    return (react_default.a.createElement(LegendItem[\"a\" /* default */], { key: `legend-item-${group.field}-${item.input}`, margin: \"0 5px\" },\n        typeof MarkRenderer === 'undefined' ? (react_default.a.createElement(\"svg\", { width: MARK_SIZE, height: MARK_SIZE, style: MARK_STYLE },\n            react_default.a.createElement(\"circle\", { fill: \n                // @ts-ignore\n                ((_c = (_b = (_a = item.output.color) !== null && _a !== void 0 ? _a : \n                // @ts-ignore\n                item.output.fill) !== null && _b !== void 0 ? _b : \n                // @ts-ignore\n                item.output.stroke) !== null && _c !== void 0 ? _c : '#ccc'), stroke: \n                // @ts-ignore\n                ((_d = item.output.stroke) !== null && _d !== void 0 ? _d : 'none'), r: MARK_SIZE / 2, cx: MARK_SIZE / 2, cy: MARK_SIZE / 2 }))) : (react_default.a.createElement(MarkRenderer, { group: group, item: item })),\n        typeof LabelRenderer === 'undefined' ? (react_default.a.createElement(LegendLabel[\"a\" /* default */], { align: \"left\", margin: \"0 0 0 4px\" }, item.input)) : (react_default.a.createElement(LabelRenderer, { group: group, item: item }))));\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/legend/DefaultLegendGroup.tsx\n\n\nconst LEGEND_GROUP_STYLE = {\n    display: 'flex',\n    flexBasis: 'auto',\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexWrap: 'wrap',\n    fontSize: '0.8em',\n    justifyContent: 'flex-end',\n    padding: 8,\n};\nfunction DefaultLegendGroupRenderer({ group, ItemRenderer = DefaultLegendItem, ItemMarkRenderer, ItemLabelRenderer, style, }) {\n    const combinedStyle = typeof style === 'undefined' ? LEGEND_GROUP_STYLE : Object.assign(Object.assign({}, LEGEND_GROUP_STYLE), style);\n    return (react_default.a.createElement(\"div\", { style: combinedStyle }, 'items' in group &&\n        group.items.map(item => (react_default.a.createElement(ItemRenderer, { key: `legend-item-${group.field}-${item.input}`, group: group, item: item, MarkRenderer: ItemMarkRenderer, LabelRenderer: ItemLabelRenderer })))));\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/legend/DefaultLegend.tsx\n\n\nconst LEGEND_CONTAINER_STYLE = {\n    display: 'flex',\n    flexBasis: 'auto',\n    flexGrow: 1,\n    flexShrink: 1,\n    maxHeight: 100,\n    overflowY: 'auto',\n    position: 'relative',\n};\nclass DefaultLegend_DefaultLegend extends react[\"PureComponent\"] {\n    render() {\n        const { groups, LegendGroupRenderer = DefaultLegendGroupRenderer, LegendItemRenderer, LegendItemMarkRenderer, LegendItemLabelRenderer, style, } = this.props;\n        const combinedStyle = typeof style === 'undefined'\n            ? LEGEND_CONTAINER_STYLE\n            : Object.assign(Object.assign({}, LEGEND_CONTAINER_STYLE), style);\n        return (react_default.a.createElement(\"div\", { style: combinedStyle }, groups\n            .filter(group => 'items' in group && group.items.length > 0)\n            .map(group => (react_default.a.createElement(LegendGroupRenderer, { key: group.field, group: group, ItemRenderer: LegendItemRenderer, ItemMarkRenderer: LegendItemMarkRenderer, ItemLabelRenderer: LegendItemLabelRenderer })))));\n    }\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/legend/createRenderLegend.tsx\n\n\nfunction createRenderLegend(encoder, data, props) {\n    if (encoder.hasLegend()) {\n        const { LegendRenderer = DefaultLegend_DefaultLegend, LegendGroupRenderer, LegendItemRenderer, LegendItemLabelRenderer, LegendItemMarkRenderer, } = props;\n        return () => (react_default.a.createElement(LegendRenderer, { groups: encoder.getLegendInformation(data), LegendGroupRenderer: LegendGroupRenderer, LegendItemRenderer: LegendItemRenderer, LegendItemMarkRenderer: LegendItemMarkRenderer, LegendItemLabelRenderer: LegendItemLabelRenderer }));\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1918\n")},2140:function(module,exports,__webpack_require__){"use strict";eval('exports.__esModule=!0,exports.default=exports.propTypes=exports.withTooltipPropTypes=exports.Tooltip=void 0;var _react=_interopRequireDefault(__webpack_require__(2)),_propTypes=_interopRequireDefault(__webpack_require__(17)),_localPoint=_interopRequireDefault(__webpack_require__(2105)),_withTooltip=_interopRequireDefault(__webpack_require__(2161)),_TooltipWithBounds=_interopRequireWildcard(__webpack_require__(2160)),_Tooltip=_interopRequireDefault(__webpack_require__(1928));exports.Tooltip=_Tooltip.default;function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)if(Object.prototype.hasOwnProperty.call(a,c)){var d=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(a,c):{};d.get||d.set?Object.defineProperty(b,c,d):b[c]=a[c]}return b.default=a,b}function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return a}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var withTooltipPropTypes={onMouseMove:_propTypes.default.func,// expects to be called like func({ event, datum })\nonMouseLeave:_propTypes.default.func,// expects to be called like func({ event, datum })\ntooltipData:_propTypes.default.any};exports.withTooltipPropTypes=withTooltipPropTypes;var propTypes=_extends({},_TooltipWithBounds.withTooltipPropTypes,{children:_propTypes.default.oneOfType([_propTypes.default.object,_propTypes.default.func]).isRequired,className:_propTypes.default.string,HoverStyles:_propTypes.default.oneOfType([_propTypes.default.object,_propTypes.default.func]),renderTooltip:_propTypes.default.func,styles:_propTypes.default.objectOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number])),TooltipComponent:_propTypes.default.oneOfType([_propTypes.default.object,_propTypes.default.func]),tooltipProps:_propTypes.default.object,// eslint-disable-line react/forbid-prop-types\ntooltipTimeout:_propTypes.default.number});exports.propTypes=propTypes;var defaultProps={className:null,HoverStyles:function a(){return _react.default.createElement("style",{type:"text/css"},"\\n      .vx-arc:hover,\\n      .vx-bar:hover,\\n      .vx-glyph-dot:hover {\\n        opacity: 0.7;\\n      }\\n    ")},renderTooltip:null,styles:{display:"inline-block",position:"relative"},TooltipComponent:_TooltipWithBounds.default,tooltipProps:null,tooltipTimeout:200},WithTooltip=/*#__PURE__*/function(a){function b(b){var c;return c=a.call(this,b)||this,c.handleMouseMove=c.handleMouseMove.bind(_assertThisInitialized(_assertThisInitialized(c))),c.handleMouseLeave=c.handleMouseLeave.bind(_assertThisInitialized(_assertThisInitialized(c))),c.tooltipTimeout=null,c}_inheritsLoose(b,a);var c=b.prototype;return c.componentWillUnmount=function a(){this.tooltipTimeout&&clearTimeout(this.tooltipTimeout)},c.handleMouseMove=function h(a){var b=a.event,c=a.datum,d=a.coords,e=_objectWithoutPropertiesLoose(a,["event","datum","coords"]),f=this.props.showTooltip;this.tooltipTimeout&&clearTimeout(this.tooltipTimeout);var g={x:0,y:0};b&&b.target&&"focus"!==b.type&&b.target.ownerSVGElement&&(g=(0,_localPoint.default)(b.target.ownerSVGElement,b)),g=_extends({},g,d),f({tooltipLeft:g.x,tooltipTop:g.y,tooltipData:_extends({event:b,datum:c},e)})},c.handleMouseLeave=function d(){var a=this.props,b=a.tooltipTimeout,c=a.hideTooltip;this.tooltipTimeout=setTimeout(function(){c()},b)},c.render=function o(){var a=this.props,b=a.children,c=a.className,d=a.HoverStyles,e=a.tooltipData,f=a.tooltipOpen,g=a.tooltipLeft,h=a.tooltipTop,i=a.tooltipProps,j=a.renderTooltip,k=a.styles,l=a.TooltipComponent,m={onMouseMove:this.handleMouseMove,onMouseLeave:this.handleMouseLeave,tooltipData:e},n=j&&f&&l&&j(e);return _react.default.createElement("div",{style:k,className:c},"function"==typeof b?b(m):_react.default.cloneElement(_react.default.Children.only(b),m),!!n&&_react.default.createElement(l,_extends({key:Math.random(),top:h,left:g},i),n),d&&_react.default.createElement(d,null))},b}(_react.default.PureComponent);WithTooltip.propTypes=propTypes,WithTooltip.defaultProps=defaultProps;var _default=(0,_withTooltip.default)(WithTooltip);exports.default=_default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE0MC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9ub2RlX21vZHVsZXMvQGRhdGEtdWkvc2hhcmVkL2xpYi9lbmhhbmNlci9XaXRoVG9vbHRpcC5qcz85Y2JhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2V4cG9ydHMuX19lc01vZHVsZT0hMCxleHBvcnRzLmRlZmF1bHQ9ZXhwb3J0cy5wcm9wVHlwZXM9ZXhwb3J0cy53aXRoVG9vbHRpcFByb3BUeXBlcz1leHBvcnRzLlRvb2x0aXA9dm9pZCAwO3ZhciBfcmVhY3Q9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpLF9wcm9wVHlwZXM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicHJvcC10eXBlc1wiKSksX2xvY2FsUG9pbnQ9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQHZ4L2V2ZW50L2J1aWxkL2xvY2FsUG9pbnRcIikpLF93aXRoVG9vbHRpcD1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAdngvdG9vbHRpcC9idWlsZC9lbmhhbmNlcnMvd2l0aFRvb2x0aXBcIikpLF9Ub29sdGlwV2l0aEJvdW5kcz1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiQHZ4L3Rvb2x0aXAvYnVpbGQvdG9vbHRpcHMvVG9vbHRpcFdpdGhCb3VuZHNcIikpLF9Ub29sdGlwPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkB2eC90b29sdGlwL2J1aWxkL3Rvb2x0aXBzL1Rvb2x0aXBcIikpO2V4cG9ydHMuVG9vbHRpcD1fVG9vbHRpcC5kZWZhdWx0O2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKGEpe2lmKGEmJmEuX19lc01vZHVsZSlyZXR1cm4gYTt2YXIgYj17fTtpZihudWxsIT1hKWZvcih2YXIgYyBpbiBhKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGMpKXt2YXIgZD1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLGMpOnt9O2QuZ2V0fHxkLnNldD9PYmplY3QuZGVmaW5lUHJvcGVydHkoYixjLGQpOmJbY109YVtjXX1yZXR1cm4gYi5kZWZhdWx0PWEsYn1mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGEpe3JldHVybiBhJiZhLl9fZXNNb2R1bGU/YTp7ZGVmYXVsdDphfX1mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShhLGIpe2lmKG51bGw9PWEpcmV0dXJue307dmFyIGMsZCxlPXt9LGY9T2JqZWN0LmtleXMoYSk7Zm9yKGQ9MDtkPGYubGVuZ3RoO2QrKyljPWZbZF0sMDw9Yi5pbmRleE9mKGMpfHwoZVtjXT1hW2NdKTtyZXR1cm4gZX1mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShhLGIpe2EucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYi5wcm90b3R5cGUpLGEucHJvdG90eXBlLmNvbnN0cnVjdG9yPWEsYS5fX3Byb3RvX189Yn1mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGEpe2lmKHZvaWQgMD09PWEpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiBhfWZ1bmN0aW9uIF9leHRlbmRzKCl7cmV0dXJuIF9leHRlbmRzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKylmb3IodmFyIGQgaW4gYj1hcmd1bWVudHNbY10sYilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYixkKSYmKGFbZF09YltkXSk7cmV0dXJuIGF9LF9leHRlbmRzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgd2l0aFRvb2x0aXBQcm9wVHlwZXM9e29uTW91c2VNb3ZlOl9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLC8vIGV4cGVjdHMgdG8gYmUgY2FsbGVkIGxpa2UgZnVuYyh7IGV2ZW50LCBkYXR1bSB9KVxub25Nb3VzZUxlYXZlOl9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLC8vIGV4cGVjdHMgdG8gYmUgY2FsbGVkIGxpa2UgZnVuYyh7IGV2ZW50LCBkYXR1bSB9KVxudG9vbHRpcERhdGE6X3Byb3BUeXBlcy5kZWZhdWx0LmFueX07ZXhwb3J0cy53aXRoVG9vbHRpcFByb3BUeXBlcz13aXRoVG9vbHRpcFByb3BUeXBlczt2YXIgcHJvcFR5cGVzPV9leHRlbmRzKHt9LF9Ub29sdGlwV2l0aEJvdW5kcy53aXRoVG9vbHRpcFByb3BUeXBlcyx7Y2hpbGRyZW46X3Byb3BUeXBlcy5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCxfcHJvcFR5cGVzLmRlZmF1bHQuZnVuY10pLmlzUmVxdWlyZWQsY2xhc3NOYW1lOl9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsSG92ZXJTdHlsZXM6X3Byb3BUeXBlcy5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCxfcHJvcFR5cGVzLmRlZmF1bHQuZnVuY10pLHJlbmRlclRvb2x0aXA6X3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsc3R5bGVzOl9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3RPZihfcHJvcFR5cGVzLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXJdKSksVG9vbHRpcENvbXBvbmVudDpfcHJvcFR5cGVzLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0LF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jXSksdG9vbHRpcFByb3BzOl9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QsLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9mb3JiaWQtcHJvcC10eXBlc1xudG9vbHRpcFRpbWVvdXQ6X3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlcn0pO2V4cG9ydHMucHJvcFR5cGVzPXByb3BUeXBlczt2YXIgZGVmYXVsdFByb3BzPXtjbGFzc05hbWU6bnVsbCxIb3ZlclN0eWxlczpmdW5jdGlvbiBhKCl7cmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLHt0eXBlOlwidGV4dC9jc3NcIn0sXCJcXG4gICAgICAudngtYXJjOmhvdmVyLFxcbiAgICAgIC52eC1iYXI6aG92ZXIsXFxuICAgICAgLnZ4LWdseXBoLWRvdDpob3ZlciB7XFxuICAgICAgICBvcGFjaXR5OiAwLjc7XFxuICAgICAgfVxcbiAgICBcIil9LHJlbmRlclRvb2x0aXA6bnVsbCxzdHlsZXM6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixwb3NpdGlvbjpcInJlbGF0aXZlXCJ9LFRvb2x0aXBDb21wb25lbnQ6X1Rvb2x0aXBXaXRoQm91bmRzLmRlZmF1bHQsdG9vbHRpcFByb3BzOm51bGwsdG9vbHRpcFRpbWVvdXQ6MjAwfSxXaXRoVG9vbHRpcD0vKiNfX1BVUkVfXyovZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihiKXt2YXIgYztyZXR1cm4gYz1hLmNhbGwodGhpcyxiKXx8dGhpcyxjLmhhbmRsZU1vdXNlTW92ZT1jLmhhbmRsZU1vdXNlTW92ZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChjKSkpLGMuaGFuZGxlTW91c2VMZWF2ZT1jLmhhbmRsZU1vdXNlTGVhdmUuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoYykpKSxjLnRvb2x0aXBUaW1lb3V0PW51bGwsY31faW5oZXJpdHNMb29zZShiLGEpO3ZhciBjPWIucHJvdG90eXBlO3JldHVybiBjLmNvbXBvbmVudFdpbGxVbm1vdW50PWZ1bmN0aW9uIGEoKXt0aGlzLnRvb2x0aXBUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy50b29sdGlwVGltZW91dCl9LGMuaGFuZGxlTW91c2VNb3ZlPWZ1bmN0aW9uIGgoYSl7dmFyIGI9YS5ldmVudCxjPWEuZGF0dW0sZD1hLmNvb3JkcyxlPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGEsW1wiZXZlbnRcIixcImRhdHVtXCIsXCJjb29yZHNcIl0pLGY9dGhpcy5wcm9wcy5zaG93VG9vbHRpcDt0aGlzLnRvb2x0aXBUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy50b29sdGlwVGltZW91dCk7dmFyIGc9e3g6MCx5OjB9O2ImJmIudGFyZ2V0JiZcImZvY3VzXCIhPT1iLnR5cGUmJmIudGFyZ2V0Lm93bmVyU1ZHRWxlbWVudCYmKGc9KDAsX2xvY2FsUG9pbnQuZGVmYXVsdCkoYi50YXJnZXQub3duZXJTVkdFbGVtZW50LGIpKSxnPV9leHRlbmRzKHt9LGcsZCksZih7dG9vbHRpcExlZnQ6Zy54LHRvb2x0aXBUb3A6Zy55LHRvb2x0aXBEYXRhOl9leHRlbmRzKHtldmVudDpiLGRhdHVtOmN9LGUpfSl9LGMuaGFuZGxlTW91c2VMZWF2ZT1mdW5jdGlvbiBkKCl7dmFyIGE9dGhpcy5wcm9wcyxiPWEudG9vbHRpcFRpbWVvdXQsYz1hLmhpZGVUb29sdGlwO3RoaXMudG9vbHRpcFRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2MoKX0sYil9LGMucmVuZGVyPWZ1bmN0aW9uIG8oKXt2YXIgYT10aGlzLnByb3BzLGI9YS5jaGlsZHJlbixjPWEuY2xhc3NOYW1lLGQ9YS5Ib3ZlclN0eWxlcyxlPWEudG9vbHRpcERhdGEsZj1hLnRvb2x0aXBPcGVuLGc9YS50b29sdGlwTGVmdCxoPWEudG9vbHRpcFRvcCxpPWEudG9vbHRpcFByb3BzLGo9YS5yZW5kZXJUb29sdGlwLGs9YS5zdHlsZXMsbD1hLlRvb2x0aXBDb21wb25lbnQsbT17b25Nb3VzZU1vdmU6dGhpcy5oYW5kbGVNb3VzZU1vdmUsb25Nb3VzZUxlYXZlOnRoaXMuaGFuZGxlTW91c2VMZWF2ZSx0b29sdGlwRGF0YTplfSxuPWomJmYmJmwmJmooZSk7cmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7c3R5bGU6ayxjbGFzc05hbWU6Y30sXCJmdW5jdGlvblwiPT10eXBlb2YgYj9iKG0pOl9yZWFjdC5kZWZhdWx0LmNsb25lRWxlbWVudChfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KGIpLG0pLCEhbiYmX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChsLF9leHRlbmRzKHtrZXk6TWF0aC5yYW5kb20oKSx0b3A6aCxsZWZ0Omd9LGkpLG4pLGQmJl9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZCxudWxsKSl9LGJ9KF9yZWFjdC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO1dpdGhUb29sdGlwLnByb3BUeXBlcz1wcm9wVHlwZXMsV2l0aFRvb2x0aXAuZGVmYXVsdFByb3BzPWRlZmF1bHRQcm9wczt2YXIgX2RlZmF1bHQ9KDAsX3dpdGhUb29sdGlwLmRlZmF1bHQpKFdpdGhUb29sdGlwKTtleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHQ7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2140\n')},2141:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* unused harmony export Glyph */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GlyphDot; });\n/* unused harmony export GlyphCross */\n/* unused harmony export GlyphDiamond */\n/* unused harmony export GlyphStar */\n/* unused harmony export GlyphTriangle */\n/* unused harmony export GlyphWye */\n/* unused harmony export GlyphSquare */\n/* unused harmony export GlyphCircle */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vx_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1842);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(183);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1898);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1859);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1860);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1862);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1863);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1864);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(1861);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(1858);\n\n\n\n\n\nfunction Glyph(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      className = _ref.className,\n      children = _ref.children;\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    _vx_group__WEBPACK_IMPORTED_MODULE_1__[/* Group */ \"a\"],\n    { className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph', className), top: top, left: left },\n    children\n  );\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nfunction GlyphDot(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === undefined ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === undefined ? 0 : _ref$left,\n      className = _ref.className,\n      children = _ref.children,\n      cx$$1 = _ref.cx,\n      cy = _ref.cy,\n      r = _ref.r,\n      fill = _ref.fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      restProps = objectWithoutProperties(_ref, ['top', 'left', 'className', 'children', 'cx', 'cy', 'r', 'fill', 'stroke', 'strokeWidth', 'strokeDasharray']);\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('circle', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-dot', className),\n      cx: cx$$1,\n      cy: cy,\n      r: r,\n      fill: fill,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray\n    }, restProps)),\n    children\n  );\n}\n\nfunction callOrValue(maybeFn, data) {\n  if (typeof maybeFn === 'function') {\n    return maybeFn(data);\n  }\n  return maybeFn;\n}\n\nfunction additionalProps(restProps, data) {\n  return Object.keys(restProps).reduce(function (ret, cur) {\n    ret[cur] = callOrValue(restProps[cur], data);\n    return ret;\n  }, {});\n}\n\nfunction GlyphCross(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-cross', className),\n      d: path()\n    }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphDiamond(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-diamond', className),\n      d: path()\n    }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphStar(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_6__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({ className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-star', className), d: path() }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphTriangle(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-triangle', className),\n      d: path()\n    }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphWye(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_8__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({ className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-wye', className), d: path() }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphSquare(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_9__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-square', className),\n      d: path()\n    }, additionalProps(restProps))),\n    children\n  );\n}\n\nfunction GlyphCircle(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = objectWithoutProperties(_ref, ['children', 'className', 'top', 'left', 'size']);\n\n  var path = Object(d3_shape__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])();\n  path.type(d3_shape__WEBPACK_IMPORTED_MODULE_10__[/* default */ \"a\"]);\n  if (size) path.size(size);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n    Glyph,\n    { top: top, left: left },\n    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('path', _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('vx-glyph-circle', className),\n      d: path()\n    }, additionalProps(restProps))),\n    children\n  );\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2141\n")},2493:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ Line_LineChart; });\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/react/index.js\nvar react = __webpack_require__(2);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(104);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/shared/lib/enhancer/WithTooltip.js\nvar WithTooltip = __webpack_require__(2140);\nvar WithTooltip_default = /*#__PURE__*/__webpack_require__.n(WithTooltip);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/composer/WithTooltip.js\n\n\n/* harmony default export */ var composer_WithTooltip = (WithTooltip_default.a);\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/chart/XYChart.js + 51 modules\nvar XYChart = __webpack_require__(2481);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/chart/CrossHair.js\nvar CrossHair = __webpack_require__(2471);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/aesthetic/LinearGradient.js\nvar LinearGradient = __webpack_require__(2468);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/series/AreaSeries.js\nvar AreaSeries = __webpack_require__(2469);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/theme/esm/color.js\nvar color = __webpack_require__(1929);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/shared/esm/components/FocusBlurHandler.js\nvar FocusBlurHandler = __webpack_require__(2470);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/glyph/dist/vx-glyph.es.js\nvar vx_glyph_es = __webpack_require__(2141);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/node_modules/@vx/shape/dist/vx-shape.es.js\nvar vx_shape_es = __webpack_require__(2121);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(17);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/chartUtils.js\nvar chartUtils = __webpack_require__(1835);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/findClosestDatum.js\nvar findClosestDatum = __webpack_require__(2120);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/interpolatorLookup.js\nvar interpolatorLookup = __webpack_require__(2077);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/propShapes.js\nvar propShapes = __webpack_require__(1826);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/utils/sharedSeriesProps.js\nvar sharedSeriesProps = __webpack_require__(1900);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/xy-chart/esm/series/LineSeries.js\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar propTypes = _extends({}, sharedSeriesProps["a" /* default */], {\n  data: propShapes["e" /* lineSeriesDataShape */].isRequired,\n  interpolation: propShapes["d" /* interpolationShape */],\n  showPoints: prop_types_default.a.bool,\n  stroke: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.string]),\n  strokeDasharray: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.string]),\n  strokeWidth: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.number]),\n  strokeOpacity: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.number]),\n  strokeLinecap: prop_types_default.a.oneOf([\'butt\', \'square\', \'round\', \'inherit\'])\n});\n\nvar defaultProps = {\n  interpolation: \'monotoneX\',\n  showPoints: false,\n  stroke: color["a" /* default */].default,\n  strokeDasharray: null,\n  strokeWidth: 3,\n  strokeOpacity: 1,\n  strokeLinecap: \'round\'\n};\n\nvar x = function x(d) {\n  return d.x;\n};\n\nvar y = function y(d) {\n  return d.y;\n};\n\nvar LineSeries_defined = function defined(d) {\n  return Object(chartUtils["j" /* isDefined */])(y(d));\n};\n\nvar noEventsStyles = {\n  pointerEvents: \'none\'\n};\n\nvar LineSeries_LineSeries =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(LineSeries, _React$PureComponent);\n\n  function LineSeries() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = LineSeries.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        data = _this$props.data,\n        disableMouseEvents = _this$props.disableMouseEvents,\n        interpolation = _this$props.interpolation,\n        showPoints = _this$props.showPoints,\n        stroke = _this$props.stroke,\n        strokeDasharray = _this$props.strokeDasharray,\n        strokeWidth = _this$props.strokeWidth,\n        strokeLinecap = _this$props.strokeLinecap,\n        strokeOpacity = _this$props.strokeOpacity,\n        xScale = _this$props.xScale,\n        yScale = _this$props.yScale,\n        margin = _this$props.margin,\n        onClick = _this$props.onClick,\n        onMouseMove = _this$props.onMouseMove,\n        onMouseLeave = _this$props.onMouseLeave;\n    if (!xScale || !yScale) return null;\n    var strokeValue = Object(chartUtils["b" /* callOrValue */])(stroke);\n    var strokeOpacityValue = Object(chartUtils["b" /* callOrValue */])(strokeOpacity);\n    var curve = interpolatorLookup["a" /* default */][interpolation] || interpolatorLookup["a" /* default */].monotoneX;\n    return react_default.a.createElement(vx_shape_es["c" /* LinePath */], {\n      style: disableMouseEvents ? noEventsStyles : null,\n      data: data,\n      xScale: xScale,\n      yScale: yScale,\n      x: x,\n      y: y,\n      stroke: strokeValue,\n      strokeWidth: Object(chartUtils["b" /* callOrValue */])(strokeWidth),\n      strokeDasharray: Object(chartUtils["b" /* callOrValue */])(strokeDasharray),\n      strokeLinecap: strokeLinecap,\n      strokeOpacity: strokeOpacityValue,\n      curve: curve,\n      defined: LineSeries_defined,\n      onClick: disableMouseEvents ? null : onClick && function () {\n        return function (event) {\n          var d = Object(findClosestDatum["a" /* default */])({\n            data: data,\n            getX: x,\n            event: event,\n            xScale: xScale,\n            marginLeft: margin.left\n          });\n          onClick({\n            event: event,\n            data: data,\n            datum: d,\n            color: strokeValue\n          });\n        };\n      },\n      onMouseMove: disableMouseEvents ? null : onMouseMove && function () {\n        return function (event) {\n          var d = Object(findClosestDatum["a" /* default */])({\n            data: data,\n            getX: x,\n            event: event,\n            xScale: xScale,\n            marginLeft: margin.left\n          });\n          onMouseMove({\n            event: event,\n            data: data,\n            datum: d,\n            color: strokeValue\n          });\n        };\n      },\n      onMouseLeave: disableMouseEvents ? null : onMouseLeave && function () {\n        return onMouseLeave;\n      },\n      glyph: function glyph(d, i) {\n        return (// <a /> wrapper is needed for focusing with SVG 1.2 regardless of whether we show a point\n          Object(chartUtils["j" /* isDefined */])(x(d)) && Object(chartUtils["j" /* isDefined */])(y(d)) && react_default.a.createElement(FocusBlurHandler["a" /* default */], {\n            key: "linepoint-" + i,\n            onBlur: disableMouseEvents ? null : onMouseLeave,\n            onFocus: disableMouseEvents ? null : function (event) {\n              onMouseMove({\n                event: event,\n                data: data,\n                datum: d,\n                color: d.stroke || Object(chartUtils["b" /* callOrValue */])(stroke, d, i),\n                index: i\n              });\n            }\n          }, showPoints && react_default.a.createElement(vx_glyph_es["a" /* GlyphDot */], {\n            key: i + "-" + x(d),\n            cx: xScale(x(d)),\n            cy: yScale(y(d)),\n            r: 4,\n            fill: d.stroke || Object(chartUtils["b" /* callOrValue */])(stroke, d, i),\n            stroke: "#FFFFFF",\n            strokeWidth: 1,\n            style: {\n              pointerEvents: \'none\'\n            }\n          }, d.label && react_default.a.createElement("text", {\n            x: xScale(x(d)),\n            y: yScale(y(d)),\n            dx: 10,\n            fill: d.stroke || Object(chartUtils["b" /* callOrValue */])(stroke, d, i),\n            stroke: "#fff",\n            strokeWidth: 1,\n            fontSize: 12\n          }, d.label)))\n        );\n      }\n    });\n  };\n\n  return LineSeries;\n}(react_default.a.PureComponent);\n\n\nLineSeries_LineSeries.propTypes = propTypes;\nLineSeries_LineSeries.defaultProps = defaultProps;\nLineSeries_LineSeries.displayName = \'LineSeries\';\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/@data-ui/theme/esm/chartTheme.js + 2 modules\nvar chartTheme = __webpack_require__(2504);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/legend/WithLegend.tsx\nvar WithLegend = __webpack_require__(981);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/reselect/es/index.js\nvar es = __webpack_require__(157);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/tooltip/TooltipFrame.tsx\nvar TooltipFrame = __webpack_require__(982);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/chart-composition/tooltip/TooltipTable.tsx\nvar TooltipTable = __webpack_require__(983);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/Line/DefaultTooltipRenderer.tsx\n\n\n\nconst MARK_STYLE = { marginRight: 4 };\nfunction DefaultTooltipRenderer({ allSeries, datum, encoder, series = {}, theme = chartTheme["a" /* default */], }) {\n    return (react_default.a.createElement(TooltipFrame["a" /* default */], null,\n        react_default.a.createElement(react_default.a.Fragment, null,\n            react_default.a.createElement("div", { style: { fontFamily: theme.labelStyles.fontFamily } },\n                react_default.a.createElement("strong", null, encoder.channels.x.formatValue(datum.x))),\n            react_default.a.createElement("br", null),\n            series && (react_default.a.createElement(TooltipTable["a" /* default */], { data: allSeries\n                    .filter(({ key }) => series[key])\n                    .concat()\n                    .sort((a, b) => series[b.key].y - series[a.key].y)\n                    .map(({ key, stroke, strokeDasharray, strokeWidth }) => ({\n                    key,\n                    keyColumn: (react_default.a.createElement(react_default.a.Fragment, null,\n                        react_default.a.createElement("svg", { width: "12", height: "8", style: MARK_STYLE },\n                            react_default.a.createElement("line", { x2: "12", y1: "3", y2: "3", stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray })),\n                        series[key] === datum ? react_default.a.createElement("b", null, key) : key)),\n                    valueColumn: encoder.channels.y.formatValue(series[key].y),\n                })) })))));\n}\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/createMarginSelector.tsx\nvar createMarginSelector = __webpack_require__(1913);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/convertScaleToDataUIScaleShape.ts\nvar convertScaleToDataUIScaleShape = __webpack_require__(1915);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/utils/createXYChartLayoutWithTheme.ts + 8 modules\nvar createXYChartLayoutWithTheme = __webpack_require__(1916);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/legend/createRenderLegend.tsx + 3 modules\nvar createRenderLegend = __webpack_require__(1918);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/Line/Encoder.ts\nvar Encoder = __webpack_require__(1016);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/Line/DefaultLegendItemMarkRenderer.tsx\n\nconst MARK_WIDTH = 12;\nconst MARK_HEIGHT = 8;\nconst DefaultLegendItemMarkRenderer_MARK_STYLE = { display: \'inline-block\' };\nfunction DefaultLegendItemMarkRenderer({ item, }) {\n    var _a, _b, _c;\n    return (react_default.a.createElement("svg", { width: MARK_WIDTH, height: MARK_HEIGHT, style: DefaultLegendItemMarkRenderer_MARK_STYLE },\n        react_default.a.createElement("line", { stroke: (_a = item.output.stroke) !== null && _a !== void 0 ? _a : \'none\', strokeWidth: (_b = item.output.strokeWidth) !== null && _b !== void 0 ? _b : 2, strokeDasharray: (_c = item.output.strokeDasharray) !== null && _c !== void 0 ? _c : \'none\', x1: 0, x2: MARK_WIDTH, y1: MARK_HEIGHT / 2, y2: MARK_HEIGHT / 2 })));\n}\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/preset-chart-xy/src/components/Line/Line.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Line_defaultProps = {\n    className: \'\',\n    encoding: {},\n    LegendItemMarkRenderer: DefaultLegendItemMarkRenderer,\n    margin: createMarginSelector["a" /* DEFAULT_MARGIN */],\n    theme: chartTheme["a" /* default */],\n    TooltipRenderer: DefaultTooltipRenderer,\n};\nconst CIRCLE_STYLE = { strokeWidth: 1.5 };\nclass Line_LineChart extends react["PureComponent"] {\n    constructor() {\n        super(...arguments);\n        this.createEncoder = Encoder["a" /* lineEncoderFactory */].createSelector();\n        this.createAllSeries = Object(es["createSelector"])((input) => input.encoder, input => input.data, (encoder, data) => {\n            const { channels } = encoder;\n            const fieldNames = encoder.getGroupBys();\n            const groups = Object(lodash["groupBy"])(data, row => fieldNames.map(f => `${f}=${row[f]}`).join(\',\'));\n            const allSeries = Object(lodash["values"])(groups).map(seriesData => {\n                const firstDatum = seriesData[0];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                const key = fieldNames.map(f => firstDatum[f]).join(\',\');\n                const series = {\n                    key: key.length === 0 ? channels.y.getTitle() : key,\n                    fill: channels.fill.encodeDatum(firstDatum, false),\n                    stroke: channels.stroke.encodeDatum(firstDatum, \'#222\'),\n                    strokeDasharray: channels.strokeDasharray.encodeDatum(firstDatum, \'\'),\n                    strokeWidth: channels.strokeWidth.encodeDatum(firstDatum, 1),\n                    values: [],\n                };\n                series.values = seriesData\n                    .map(v => ({\n                    x: channels.x.getValueFromDatum(v),\n                    y: channels.y.getValueFromDatum(v),\n                    data: v,\n                    parent: series,\n                }))\n                    .sort((a, b) => {\n                    const aTime = a.x instanceof Date ? a.x.getTime() : a.x;\n                    const bTime = b.x instanceof Date ? b.x.getTime() : b.x;\n                    return aTime - bTime;\n                });\n                return series;\n            });\n            return allSeries;\n        });\n        this.createMargin = Object(createMarginSelector["b" /* default */])();\n        this.renderChart = (dim) => {\n            const { width, height } = dim;\n            const { data, margin, theme, TooltipRenderer, encoding } = this.props;\n            const encoder = this.createEncoder(encoding);\n            const { channels } = encoder;\n            encoder.setDomainFromDataset(data);\n            const allSeries = this.createAllSeries({ encoder, data });\n            const layout = Object(createXYChartLayoutWithTheme["a" /* default */])({\n                width,\n                height,\n                margin: this.createMargin(margin),\n                theme,\n                xEncoder: channels.x,\n                yEncoder: channels.y,\n            });\n            return layout.renderChartWithFrame((chartDim) => (react_default.a.createElement(composer_WithTooltip, { renderTooltip: ({ datum, series, }) => (react_default.a.createElement(TooltipRenderer, { encoder: encoder, allSeries: allSeries, datum: datum, series: series, theme: theme })) }, ({ onMouseLeave, onMouseMove, tooltipData, }) => (react_default.a.createElement(XYChart["a" /* default */], { showYGrid: true, snapTooltipToDataX: true, width: chartDim.width, height: chartDim.height, ariaLabel: "LineChart", eventTrigger: "container", margin: layout.margin, renderTooltip: null, theme: theme, tooltipData: tooltipData, \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                xScale: Object(convertScaleToDataUIScaleShape["a" /* default */])(channels.x.definition.scale), \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                yScale: Object(convertScaleToDataUIScaleShape["a" /* default */])(channels.y.definition.scale), onMouseMove: onMouseMove, onMouseLeave: onMouseLeave },\n                layout.renderXAxis(),\n                layout.renderYAxis(),\n                this.renderSeries(allSeries),\n                react_default.a.createElement(CrossHair["a" /* default */], { fullHeight: true, showCircle: true, showMultipleCircles: true, strokeDasharray: "", showHorizontalLine: false, circleFill: (d) => d.y === tooltipData.datum.y ? d.parent.stroke : \'#fff\', circleSize: (d) => (d.y === tooltipData.datum.y ? 6 : 4), circleStroke: (d) => d.y === tooltipData.datum.y ? \'#fff\' : d.parent.stroke, circleStyles: CIRCLE_STYLE, stroke: "#ccc" }))))));\n        };\n    }\n    // eslint-disable-next-line class-methods-use-this\n    renderSeries(allSeries) {\n        const filledSeries = Object(lodash["flatMap"])(allSeries\n            .filter(({ fill }) => fill)\n            .map(series => {\n            const gradientId = Object(lodash["uniqueId"])(Object(lodash["kebabCase"])(`gradient-${series.key}`));\n            return [\n                react_default.a.createElement(LinearGradient["a" /* default */], { key: `${series.key}-gradient`, id: gradientId, from: series.stroke, to: "#fff" }),\n                react_default.a.createElement(AreaSeries["a" /* default */], { key: `${series.key}-fill`, seriesKey: series.key, data: series.values, interpolation: "linear", fill: `url(#${gradientId})`, stroke: series.stroke, strokeWidth: series.strokeWidth }),\n            ];\n        }));\n        const unfilledSeries = allSeries\n            .filter(({ fill }) => !fill)\n            .map(series => (react_default.a.createElement(LineSeries_LineSeries, { key: series.key, seriesKey: series.key, interpolation: "linear", data: series.values, stroke: series.stroke, strokeDasharray: series.strokeDasharray, strokeWidth: series.strokeWidth })));\n        return filledSeries.concat(unfilledSeries);\n    }\n    render() {\n        const { className, data, width, height, encoding } = this.props;\n        return (react_default.a.createElement(WithLegend["a" /* default */], { className: `superset-chart-line ${className}`, width: width, height: height, position: "top", renderLegend: Object(createRenderLegend["a" /* default */])(this.createEncoder(encoding), data, this.props), renderChart: this.renderChart }));\n    }\n}\nLine_LineChart.defaultProps = Line_defaultProps;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2493\n')}}]);