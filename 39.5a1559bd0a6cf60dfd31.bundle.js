(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{2332:function(module,exports,__webpack_require__){eval("var api = __webpack_require__(262);\n            var content = __webpack_require__(2333);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMzMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9wbHVnaW5zL2xlZ2FjeS1wbHVnaW4tY2hhcnQtc3VuYnVyc3Qvc3JjL1N1bmJ1cnN0LmNzcz85NTQ5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3Bvc3Rjc3MhLi9TdW5idXJzdC5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2332\n")},2333:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(263);\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, "/**\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\"License\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\"AS IS\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n\\n.superset-legacy-chart-sunburst text {\\n  text-rendering: optimizeLegibility;\\n}\\n.superset-legacy-chart-sunburst path {\\n  stroke: #ddd;\\n  stroke-width: 0.5px;\\n}\\n.superset-legacy-chart-sunburst .center-label {\\n  text-anchor: middle;\\n  fill: #333;\\n  pointer-events: none;\\n}\\n.superset-legacy-chart-sunburst .path-abs-percent {\\n  font-size: 3em;\\n  font-weight: 700;\\n}\\n.superset-legacy-chart-sunburst .path-cond-percent {\\n  font-size: 2em;\\n}\\n.superset-legacy-chart-sunburst .path-metrics {\\n  color: #777;\\n}\\n.superset-legacy-chart-sunburst .path-ratio {\\n  color: #777;\\n}\\n\\n.superset-legacy-chart-sunburst .breadcrumbs text {\\n  font-weight: 600;\\n  font-size: 1.2em;\\n  text-anchor: middle;\\n  fill: #333;\\n}\\n\\n/* dashboard specific */\\n/*\\n.dashboard .superset-legacy-chart-sunburst text {\\n  font-size: 1em;\\n}\\n.dashboard .superset-legacy-chart-sunburst .path-abs-percent {\\n  font-size: 2em;\\n  font-weight: 700;\\n}\\n.dashboard .superset-legacy-chart-sunburst .path-cond-percent {\\n  font-size: 1.5em;\\n}\\n.dashboard .superset-legacy-chart-sunburst .path-metrics {\\n  font-size: 1em;\\n}\\n.dashboard .superset-legacy-chart-sunburst .path-ratio {\\n  font-size: 1em;\\n}\\n*/\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMzMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMva2FtaWxnYWJyeWplbHNraS9wcm9qZWN0cy9zdXBlcnNldC11aS9wbHVnaW5zL2xlZ2FjeS1wbHVnaW4tY2hhcnQtc3VuYnVyc3Qvc3JjL1N1bmJ1cnN0LmNzcz8wNGRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKipcXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXFxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXFxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXFxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxcbiAqIFxcXCJMaWNlbnNlXFxcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuICpcXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcbiAqXFxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXFxuICogXFxcIkFTIElTXFxcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXFxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXFxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxcbiAqL1xcblxcbi5zdXBlcnNldC1sZWdhY3ktY2hhcnQtc3VuYnVyc3QgdGV4dCB7XFxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xcbn1cXG4uc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IHBhdGgge1xcbiAgc3Ryb2tlOiAjZGRkO1xcbiAgc3Ryb2tlLXdpZHRoOiAwLjVweDtcXG59XFxuLnN1cGVyc2V0LWxlZ2FjeS1jaGFydC1zdW5idXJzdCAuY2VudGVyLWxhYmVsIHtcXG4gIHRleHQtYW5jaG9yOiBtaWRkbGU7XFxuICBmaWxsOiAjMzMzO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcbi5zdXBlcnNldC1sZWdhY3ktY2hhcnQtc3VuYnVyc3QgLnBhdGgtYWJzLXBlcmNlbnQge1xcbiAgZm9udC1zaXplOiAzZW07XFxuICBmb250LXdlaWdodDogNzAwO1xcbn1cXG4uc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IC5wYXRoLWNvbmQtcGVyY2VudCB7XFxuICBmb250LXNpemU6IDJlbTtcXG59XFxuLnN1cGVyc2V0LWxlZ2FjeS1jaGFydC1zdW5idXJzdCAucGF0aC1tZXRyaWNzIHtcXG4gIGNvbG9yOiAjNzc3O1xcbn1cXG4uc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IC5wYXRoLXJhdGlvIHtcXG4gIGNvbG9yOiAjNzc3O1xcbn1cXG5cXG4uc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IC5icmVhZGNydW1icyB0ZXh0IHtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDEuMmVtO1xcbiAgdGV4dC1hbmNob3I6IG1pZGRsZTtcXG4gIGZpbGw6ICMzMzM7XFxufVxcblxcbi8qIGRhc2hib2FyZCBzcGVjaWZpYyAqL1xcbi8qXFxuLmRhc2hib2FyZCAuc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IHRleHQge1xcbiAgZm9udC1zaXplOiAxZW07XFxufVxcbi5kYXNoYm9hcmQgLnN1cGVyc2V0LWxlZ2FjeS1jaGFydC1zdW5idXJzdCAucGF0aC1hYnMtcGVyY2VudCB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcbi5kYXNoYm9hcmQgLnN1cGVyc2V0LWxlZ2FjeS1jaGFydC1zdW5idXJzdCAucGF0aC1jb25kLXBlcmNlbnQge1xcbiAgZm9udC1zaXplOiAxLjVlbTtcXG59XFxuLmRhc2hib2FyZCAuc3VwZXJzZXQtbGVnYWN5LWNoYXJ0LXN1bmJ1cnN0IC5wYXRoLW1ldHJpY3Mge1xcbiAgZm9udC1zaXplOiAxZW07XFxufVxcbi5kYXNoYm9hcmQgLnN1cGVyc2V0LWxlZ2FjeS1jaGFydC1zdW5idXJzdCAucGF0aC1yYXRpbyB7XFxuICBmb250LXNpemU6IDFlbTtcXG59XFxuKi9cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2333\n')},2502:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/index.ts\nvar src = __webpack_require__(3);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/core-js/modules/es.regexp.to-string.js\nvar es_regexp_to_string = __webpack_require__(99);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/core-js/modules/es.string.includes.js\nvar es_string_includes = __webpack_require__(327);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(266);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/d3/d3.js\nvar d3 = __webpack_require__(137);\nvar d3_default = /*#__PURE__*/__webpack_require__.n(d3);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(17);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/color/index.ts + 3 modules\nvar color = __webpack_require__(787);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/number-format/NumberFormatterRegistrySingleton.ts\nvar NumberFormatterRegistrySingleton = __webpack_require__(132);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/number-format/NumberFormats.ts\nvar NumberFormats = __webpack_require__(133);\n\n// EXTERNAL MODULE: ../superset-ui-core/src/color/SequentialSchemeRegistrySingleton.ts\nvar SequentialSchemeRegistrySingleton = __webpack_require__(537);\n\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/node_modules/core-js/modules/es.string.split.js\nvar es_string_split = __webpack_require__(806);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/legacy-plugin-chart-sunburst/src/utils/wrapSvgText.js\n/*\n  Utility function that takes a d3 svg:text selection and a max width, and splits the\n  text\'s text across multiple tspan lines such that any given line does not exceed max width\n\n  If text does not span multiple lines AND adjustedY is passed,\n  will set the text to the passed val\n*/function wrapSvgText(text,width,adjustedY){// ems\ntext.each(function(){const d3Text=d3_default.a.select(this),words=d3Text.text().split(/\\s+/);let line=[],lineNumber=0;const x=d3Text.attr("x"),y=d3Text.attr("y"),dy=parseFloat(d3Text.attr("dy"));let tspan=d3Text.text(null).append("tspan").attr("x",x).attr("y",y).attr("dy","".concat(dy,"em")),didWrap=!1;words.forEach(word=>{line.push(word);tspan.text(line.join(" "));if(tspan.node().getComputedTextLength()>width){line.pop();// remove word that pushes over the limit\ntspan.text(line.join(" "));line=[word];tspan=d3Text.append("tspan").attr("x",x).attr("y",y).attr("dy","".concat(++lineNumber*1+dy,"em")).text(word);didWrap=!0}});if(!didWrap&&"undefined"!=typeof adjustedY){tspan.attr("y",adjustedY)}})}\n// EXTERNAL MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/legacy-plugin-chart-sunburst/src/Sunburst.css\nvar Sunburst = __webpack_require__(2332);\n\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/legacy-plugin-chart-sunburst/src/Sunburst.js\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */ /* eslint-disable no-param-reassign, react/sort-prop-types */const propTypes={// Each row is an array of [hierarchy-lvl1, hierarchy-lvl2, metric1, metric2]\n// hierarchy-lvls are string. metrics are number\ndata:prop_types_default.a.arrayOf(prop_types_default.a.array),width:prop_types_default.a.number,height:prop_types_default.a.number,colorScheme:prop_types_default.a.string,linearColorScheme:prop_types_default.a.string,numberFormat:prop_types_default.a.string,metrics:prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string,prop_types_default.a.object// The metric object\n]))};function metricLabel(metric){return"string"==typeof metric||metric instanceof String?metric:metric.label}// Given a node in a partition layout, return an array of all of its ancestor\n// nodes, highest first, but excluding the root.\nfunction getAncestors(node){const path=[];let current=node;while(current.parent){path.unshift(current);current=current.parent}return path}function buildHierarchy(rows){const root={name:"root",children:[]};// each record [groupby1val, groupby2val, (<string> or 0)n, m1, m2]\nrows.forEach(row=>{const m1=+row[row.length-2],m2=+row[row.length-1],levels=row.slice(0,-2);if(Number.isNaN(m1)){// e.g. if this is a header row\nreturn}let currentNode=root;for(let level=0;level<levels.length;level++){const children=currentNode.children||[],nodeName=levels[level].toString(),isLeafNode=level>=levels.length-1||0===levels[level+1];let childNode;if(!isLeafNode){childNode=children.find(child=>child.name===nodeName&&child.level===level);if(!childNode){childNode={name:nodeName,children:[],level};children.push(childNode)}currentNode=childNode}else if(0!==nodeName){// Reached the end of the sequence; create a leaf node.\nchildNode={name:nodeName,m1,m2};children.push(childNode)}}});function recurse(node){if(node.children){let sums,m1=0,m2=0;for(let i=0;i<node.children.length;i++){sums=recurse(node.children[i]);m1+=sums[0];m2+=sums[1]}node.m1=m1;node.m2=m2}return[node.m1,node.m2]}recurse(root);return root}// Modified from http://bl.ocks.org/kerryrodden/7090426\nfunction Sunburst_Sunburst(element,props){const container=d3_default.a.select(element);container.classed("superset-legacy-chart-sunburst",!0);const{data,width,height,colorScheme,linearColorScheme,metrics,numberFormat}=props,margin={top:10,right:5,bottom:10,left:5},containerWidth=width,containerHeight=height,breadcrumbHeight=.085*containerHeight,visWidth=containerWidth-margin.left-margin.right,visHeight=containerHeight-margin.top-margin.bottom-breadcrumbHeight,radius=Math.min(visWidth,visHeight)/2;// vars with shared scope within this function\nlet colorByCategory=!0,maxBreadcrumbs,breadcrumbDims,totalSize,breadcrumbs,vis,arcs,gMiddleText;// color by category if primary/secondary metrics match\n// dom handles\nconst categoricalColorScale=color["b" /* CategoricalColorNamespace */].getScale(colorScheme);let linearColorScale;// Helper + path gen functions\nconst partition=d3_default.a.layout.partition().size([2*Math.PI,radius*radius]).value(d=>d.m1),arc=d3_default.a.svg.arc().startAngle(d=>d.x).endAngle(d=>d.x+d.dx).innerRadius(d=>Math.sqrt(d.y)).outerRadius(d=>Math.sqrt(d.y+d.dy)),formatNum=Object(NumberFormatterRegistrySingleton["c" /* getNumberFormatter */])(numberFormat||NumberFormats["a" /* default */].SI_3_DIGIT),formatPerc=Object(NumberFormatterRegistrySingleton["c" /* getNumberFormatter */])(NumberFormats["a" /* default */].PERCENT_3_POINT);container.select("svg").remove();const svg=container.append("svg:svg").attr("width",containerWidth).attr("height",containerHeight);function createBreadcrumbs(firstRowData){// -2 bc row contains 2x metrics, +extra for %label and buffer\nmaxBreadcrumbs=firstRowData.length-2+1;breadcrumbDims={width:visWidth/maxBreadcrumbs,height:.8*breadcrumbHeight,// more margin\nspacing:3,tipTailWidth:10};breadcrumbs=svg.append("svg:g").attr("class","breadcrumbs").attr("transform","translate(".concat(margin.left,",").concat(margin.top,")"));breadcrumbs.append("svg:text").attr("class","end-label")}// Generate a string that describes the points of a breadcrumb polygon.\nfunction breadcrumbPoints(d,i){const points=["0,0","".concat(breadcrumbDims.width,",0"),"".concat(breadcrumbDims.width+breadcrumbDims.tipTailWidth,",").concat(breadcrumbDims.height/2),"".concat(breadcrumbDims.width,",").concat(breadcrumbDims.height),"0,".concat(breadcrumbDims.height)];if(0<i){// Leftmost breadcrumb; don\'t include 6th vertex.\npoints.push("".concat(breadcrumbDims.tipTailWidth,",").concat(breadcrumbDims.height/2))}return points.join(" ")}function updateBreadcrumbs(sequenceArray,percentageString){const g=breadcrumbs.selectAll("g").data(sequenceArray,d=>d.name+d.depth),entering=g.enter().append("svg:g");// Add breadcrumb and label for entering nodes.\nentering.append("svg:polygon").attr("points",breadcrumbPoints).style("fill",d=>colorByCategory?categoricalColorScale(d.name):linearColorScale(d.m2/d.m1));entering.append("svg:text").attr("x",(breadcrumbDims.width+breadcrumbDims.tipTailWidth)/2).attr("y",breadcrumbDims.height/4).attr("dy","0.85em").style("fill",d=>{// Make text white or black based on the lightness of the background\nconst col=d3_default.a.hsl(colorByCategory?categoricalColorScale(d.name):linearColorScale(d.m2/d.m1));return .5>col.l?"white":"black"}).attr("class","step-label").text(d=>d.name.replace(/_/g," ")).call(wrapSvgText,breadcrumbDims.width,breadcrumbDims.height/2);// Set position for entering and updating nodes.\ng.attr("transform",(d,i)=>"translate(".concat(i*(breadcrumbDims.width+breadcrumbDims.spacing),", 0)"));// Remove exiting nodes.\ng.exit().remove();// Now move and update the percentage at the end.\nbreadcrumbs.select(".end-label").attr("x",(sequenceArray.length+.5)*(breadcrumbDims.width+breadcrumbDims.spacing)).attr("y",breadcrumbDims.height/2).attr("dy","0.35em").text(percentageString);// Make the breadcrumb trail visible, if it\'s hidden.\nbreadcrumbs.style("visibility",null)}// Fade all but the current sequence, and show it in the breadcrumb trail.\nfunction mouseenter(d){const sequenceArray=getAncestors(d),parentOfD=sequenceArray[sequenceArray.length-2]||null,absolutePercentage=(d.m1/totalSize).toPrecision(3),conditionalPercentage=parentOfD?(d.m1/parentOfD.m1).toPrecision(3):null,absolutePercString=formatPerc(absolutePercentage),conditionalPercString=parentOfD?formatPerc(conditionalPercentage):"",yOffsets=["-25","7","35","60"];let offsetIndex=0;// If metrics match, assume we are coloring by category\nconst metricsMatch=1e-5>Math.abs(d.m1-d.m2);gMiddleText.selectAll("*").remove();gMiddleText.append("text").attr("class","path-abs-percent").attr("y",yOffsets[offsetIndex++]).text("".concat(absolutePercString," of total"));if(conditionalPercString){gMiddleText.append("text").attr("class","path-cond-percent").attr("y",yOffsets[offsetIndex++]).text("".concat(conditionalPercString," of parent"))}gMiddleText.append("text").attr("class","path-metrics").attr("y",yOffsets[offsetIndex++]).text("".concat(metricLabel(metrics[0]),": ").concat(formatNum(d.m1)).concat(metricsMatch?"":", ".concat(metricLabel(metrics[1]),": ").concat(formatNum(d.m2))));gMiddleText.append("text").attr("class","path-ratio").attr("y",yOffsets[offsetIndex++]).text(metricsMatch?"":"".concat(metricLabel(metrics[1]),"/").concat(metricLabel(metrics[0]),": ").concat(formatPerc(d.m2/d.m1)));// Reset and fade all the segments.\narcs.selectAll("path").style("stroke-width",null).style("stroke",null).style("opacity",.3);// Then highlight only those that are an ancestor of the current segment.\narcs.selectAll("path").filter(node=>sequenceArray.includes(node)).style("opacity",1).style("stroke","#aaa");updateBreadcrumbs(sequenceArray,absolutePercString)}// Restore everything to full opacity when moving off the visualization.\nfunction mouseleave(){// Hide the breadcrumb trail\nbreadcrumbs.style("visibility","hidden");gMiddleText.selectAll("*").remove();// Deactivate all segments during transition.\narcs.selectAll("path").on("mouseenter",null);// Transition each segment to full opacity and then reactivate it.\narcs.selectAll("path").transition().duration(200).style("opacity",1).style("stroke",null).style("stroke-width",null).each("end",function(){d3_default.a.select(this).on("mouseenter",mouseenter)})}// Main function to draw and set up the visualization, once we have the data.\nfunction createVisualization(rows){const root=buildHierarchy(rows);vis=svg.append("svg:g").attr("class","sunburst-vis").attr("transform","translate("+"".concat(margin.left+visWidth/2,",")+"".concat(margin.top+breadcrumbHeight+visHeight/2)+")").on("mouseleave",mouseleave);arcs=vis.append("svg:g").attr("id","arcs");gMiddleText=vis.append("svg:g").attr("class","center-label");// Bounding circle underneath the sunburst, to make it easier to detect\n// when the mouse leaves the parent g.\narcs.append("svg:circle").attr("r",radius).style("opacity",0);// For efficiency, filter nodes to keep only those large enough to see.\nconst nodes=partition.nodes(root).filter(d=>.005<d.dx);// 0.005 radians = 0.29 degrees\nif(metrics[0]!==metrics[1]&&metrics[1]){colorByCategory=!1;const ext=d3_default.a.extent(nodes,d=>d.m2/d.m1);linearColorScale=Object(SequentialSchemeRegistrySingleton["a" /* default */])().get(linearColorScheme).createLinearScale(ext)}arcs.selectAll("path").data(nodes).enter().append("svg:path").attr("display",d=>d.depth?null:"none").attr("d",arc).attr("fill-rule","evenodd").style("fill",d=>colorByCategory?categoricalColorScale(d.name):linearColorScale(d.m2/d.m1)).style("opacity",1).on("mouseenter",mouseenter);// Get total size of the tree = value of root node from partition.\ntotalSize=root.value}createBreadcrumbs(data[0]);createVisualization(data)}Sunburst_Sunburst.displayName="Sunburst";Sunburst_Sunburst.propTypes=propTypes;/* harmony default export */ var src_Sunburst = (Sunburst_Sunburst);\n// CONCATENATED MODULE: /Users/kamilgabryjelski/projects/superset-ui/plugins/legacy-plugin-chart-sunburst/src/ReactSunburst.js\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *//* harmony default export */ var ReactSunburst = __webpack_exports__["default"] = (Object(src["reactify"])(src_Sunburst));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2502\n')}}]);